
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEASSIGNMENT CLOSEBRACE COLON COMMA COMMENT DECI DEN DIVIDE DOUBLE_GREATER DOUBLE_LESS EF EFNOT EQUAL GREATER_EQUAL GREATER_THAN IDENTIFIER IN LESS_EQUAL LESS_THAN LETTA MINUS MODULUS NOT_EQUAL NUMBA OPENBRACE OREF PLUS SHOW TIMES WEN WHICHEVA WUDprogram : statementstatement : expression\n                 | if_statement\n                 | loop\n                 | assign\n                 | print\n                 | COMMENT arith_stmt : expression arithm_symbol expression\n                   | expression error term expression : symbol expression : compar_stmt\n                   | arith_stmt symbol : arithm_symbol \n               | compar_symbol arithm_symbol : PLUS\n                      | MINUS\n                      | DIVIDE\n                      | TIMES\n                      | MODULUS  compar_symbol : GREATER_THAN\n                      | LESS_THAN\n                      | EQUAL\n                      | NOT_EQUAL\n                      | GREATER_EQUAL\n                      | LESS_EQUAL arith_stmt : IDENTIFIER arithm_symbol term\n                  | IDENTIFIER error term\n    compar_stmt : factor compar_symbol factor\n                | factor error factor\n    compar_stmt : IDENTIFIER compar_symbol IDENTIFIER\n                | IDENTIFIER compar_symbol factor\n                | IDENTIFIER error factor\n                | IDENTIFIER error IDENTIFIERexpression : termterm : factorarith_symbol : factor arithm_symbol factor \n    factor : NUMBA\n            | DECI\n    term : IDENTIFIERfactor : OPENBRACE expression CLOSEBRACE\n    if_statement : DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER\n                 | DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER\n                 | DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER\n                 | DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER\n    loop : DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER\n            | DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER\n    assign : IDENTIFIER ASSIGNMENT expression\n            | IDENTIFIER ASSIGNMENT WUD\n            | IDENTIFIER ASSIGNMENT LETTA\n            | IDENTIFIER ASSIGNMENT WHICHEVA\n    \n    print : SHOW OPENBRACE IDENTIFIER CLOSEBRACE\n    \n    print : SHOW OPENBRACE factor CLOSEBRACE\n          | SHOW OPENBRACE WUD CLOSEBRACE\n          | SHOW OPENBRACE LETTA CLOSEBRACE\n          | SHOW OPENBRACE error CLOSEBRACE\n    '
    
_lr_action_items = {'COMMENT':([0,84,85,88,95,99,107,109,],[8,8,8,8,8,8,8,8,]),'DOUBLE_LESS':([0,84,85,88,95,99,107,109,],[13,13,13,13,13,13,13,13,]),'IDENTIFIER':([0,14,20,21,22,23,24,25,26,27,28,29,30,33,34,36,39,40,41,42,43,50,74,82,84,85,88,89,95,99,101,107,109,],[15,38,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,38,49,51,38,57,59,49,63,73,38,86,15,15,15,38,15,15,73,15,15,]),'SHOW':([0,84,85,88,95,99,107,109,],[16,16,16,16,16,16,16,16,]),'PLUS':([0,3,9,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,46,47,48,49,52,53,57,58,59,60,61,62,68,69,74,83,84,85,88,89,93,95,99,107,109,],[20,20,-10,-11,-12,-34,20,20,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,20,20,20,20,20,-9,-35,-39,-40,20,-30,-31,-33,-32,-27,-26,-28,-29,20,20,20,20,20,20,20,20,20,20,20,]),'MINUS':([0,3,9,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,46,47,48,49,52,53,57,58,59,60,61,62,68,69,74,83,84,85,88,89,93,95,99,107,109,],[21,21,-10,-11,-12,-34,21,21,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,21,21,21,21,21,-9,-35,-39,-40,21,-30,-31,-33,-32,-27,-26,-28,-29,21,21,21,21,21,21,21,21,21,21,21,]),'DIVIDE':([0,3,9,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,46,47,48,49,52,53,57,58,59,60,61,62,68,69,74,83,84,85,88,89,93,95,99,107,109,],[22,22,-10,-11,-12,-34,22,22,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,22,22,22,22,22,-9,-35,-39,-40,22,-30,-31,-33,-32,-27,-26,-28,-29,22,22,22,22,22,22,22,22,22,22,22,]),'TIMES':([0,3,9,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,46,47,48,49,52,53,57,58,59,60,61,62,68,69,74,83,84,85,88,89,93,95,99,107,109,],[23,23,-10,-11,-12,-34,23,23,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,23,23,23,23,23,-9,-35,-39,-40,23,-30,-31,-33,-32,-27,-26,-28,-29,23,23,23,23,23,23,23,23,23,23,23,]),'MODULUS':([0,3,9,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,46,47,48,49,52,53,57,58,59,60,61,62,68,69,74,83,84,85,88,89,93,95,99,107,109,],[24,24,-10,-11,-12,-34,24,24,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,24,24,24,24,24,-9,-35,-39,-40,24,-30,-31,-33,-32,-27,-26,-28,-29,24,24,24,24,24,24,24,24,24,24,24,]),'GREATER_THAN':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[25,25,25,25,-15,-16,-17,-18,-19,-37,-38,25,25,25,-40,25,25,25,25,25,25,25,25,25,25,25,]),'LESS_THAN':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[26,26,26,26,-15,-16,-17,-18,-19,-37,-38,26,26,26,-40,26,26,26,26,26,26,26,26,26,26,26,]),'EQUAL':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[27,27,27,27,-15,-16,-17,-18,-19,-37,-38,27,27,27,-40,27,27,27,27,27,27,27,27,27,27,27,]),'NOT_EQUAL':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[28,28,28,28,-15,-16,-17,-18,-19,-37,-38,28,28,28,-40,28,28,28,28,28,28,28,28,28,28,28,]),'GREATER_EQUAL':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[29,29,29,29,-15,-16,-17,-18,-19,-37,-38,29,29,29,-40,29,29,29,29,29,29,29,29,29,29,29,]),'LESS_EQUAL':([0,14,15,17,20,21,22,23,24,31,32,33,38,39,52,72,73,74,84,85,88,89,95,99,107,109,],[30,30,30,30,-15,-16,-17,-18,-19,-37,-38,30,30,30,-40,30,30,30,30,30,30,30,30,30,30,30,]),'NUMBA':([0,14,20,21,22,23,24,25,26,27,28,29,30,33,34,39,40,41,42,43,44,45,50,74,82,84,85,88,89,95,99,101,107,109,],[31,31,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'DECI':([0,14,20,21,22,23,24,25,26,27,28,29,30,33,34,39,40,41,42,43,44,45,50,74,82,84,85,88,89,95,99,101,107,109,],[32,32,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'OPENBRACE':([0,14,16,20,21,22,23,24,25,26,27,28,29,30,33,34,35,39,40,41,42,43,44,45,50,74,82,84,85,88,89,95,96,99,101,107,109,],[14,14,43,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,14,14,50,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,101,14,14,14,14,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,68,69,75,76,77,78,79,94,97,98,103,105,111,],[0,-1,-2,-3,-4,-5,-6,-7,-10,-11,-12,-34,-39,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-47,-48,-49,-50,-30,-31,-33,-32,-27,-26,-28,-29,-51,-52,-53,-54,-55,-41,-44,-45,-42,-46,-43,]),'DOUBLE_GREATER':([3,4,5,6,7,8,9,10,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,68,69,75,76,77,78,79,90,91,92,94,97,98,100,102,103,105,110,111,],[-2,-3,-4,-5,-6,-7,-10,-11,-12,-34,-39,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-47,-48,-49,-50,-30,-31,-33,-32,-27,-26,-28,-29,-51,-52,-53,-54,-55,94,97,98,-41,-44,-45,103,105,-42,-46,111,-43,]),'EFNOT':([3,4,5,6,7,8,9,10,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,68,69,75,76,77,78,79,90,94,97,98,103,105,108,111,],[-2,-3,-4,-5,-6,-7,-10,-11,-12,-34,-39,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-47,-48,-49,-50,-30,-31,-33,-32,-27,-26,-28,-29,-51,-52,-53,-54,-55,95,-41,-44,-45,-42,-46,109,-43,]),'OREF':([3,4,5,6,7,8,9,10,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,68,69,75,76,77,78,79,90,94,97,98,103,105,111,],[-2,-3,-4,-5,-6,-7,-10,-11,-12,-34,-39,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-47,-48,-49,-50,-30,-31,-33,-32,-27,-26,-28,-29,-51,-52,-53,-54,-55,96,-41,-44,-45,-42,-46,-43,]),'error':([3,9,10,11,12,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,43,46,47,48,49,50,52,53,57,58,59,60,61,62,68,69,72,73,83,93,],[34,-10,-11,-12,-34,41,45,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,34,41,67,34,-9,-35,-39,71,-40,34,-30,-31,-33,-32,-27,-26,-28,-29,45,82,34,34,]),'CLOSEBRACE':([9,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,46,47,48,49,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,86,87,104,],[-10,-11,-12,-34,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,52,-39,-8,-9,-35,-39,-40,-30,-31,-33,-32,-27,-26,75,76,77,78,79,-28,-29,80,81,-33,-32,106,]),'COLON':([9,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,57,58,59,60,61,62,68,69,83,93,],[-10,-11,-12,-34,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-30,-31,-33,-32,-27,-26,-28,-29,88,99,]),'COMMA':([9,10,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,38,46,47,48,49,52,57,58,59,60,61,62,68,69,83,],[-10,-11,-12,-34,-35,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-37,-38,-39,-8,-9,-35,-39,-40,-30,-31,-33,-32,-27,-26,-28,-29,89,]),'EF':([13,],[35,]),'WEN':([13,],[36,]),'ASSIGNMENT':([15,],[39,]),'WUD':([39,43,],[54,65,]),'LETTA':([39,43,],[55,66,]),'WHICHEVA':([39,],[56,]),'IN':([51,],[74,]),'DEN':([80,81,106,],[84,85,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,84,85,88,95,99,107,109,],[2,90,91,92,100,102,108,110,]),'expression':([0,14,33,39,74,84,85,88,89,95,99,107,109,],[3,37,46,53,83,3,3,3,93,3,3,3,3,]),'if_statement':([0,84,85,88,95,99,107,109,],[4,4,4,4,4,4,4,4,]),'loop':([0,84,85,88,95,99,107,109,],[5,5,5,5,5,5,5,5,]),'assign':([0,84,85,88,95,99,107,109,],[6,6,6,6,6,6,6,6,]),'print':([0,84,85,88,95,99,107,109,],[7,7,7,7,7,7,7,7,]),'symbol':([0,14,33,39,74,84,85,88,89,95,99,107,109,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'compar_stmt':([0,14,33,39,50,74,84,85,88,89,95,99,101,107,109,],[10,10,10,10,70,10,10,10,10,10,10,10,104,10,10,]),'arith_stmt':([0,14,33,39,74,84,85,88,89,95,99,107,109,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'term':([0,14,33,34,39,41,42,74,84,85,88,89,95,99,107,109,],[12,12,12,47,12,61,62,12,12,12,12,12,12,12,12,12,]),'factor':([0,14,33,34,39,40,41,42,43,44,45,50,74,82,84,85,88,89,95,99,101,107,109,],[17,17,17,48,17,58,60,48,64,68,69,72,17,87,17,17,17,17,17,17,72,17,17,]),'arithm_symbol':([0,3,14,15,33,37,38,39,46,53,74,83,84,85,88,89,93,95,99,107,109,],[18,33,18,42,18,33,42,18,33,33,18,33,18,18,18,18,33,18,18,18,18,]),'compar_symbol':([0,14,15,17,33,38,39,72,73,74,84,85,88,89,95,99,107,109,],[19,19,40,44,19,40,19,44,40,19,19,19,19,19,19,19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','jolt_yacc.py',24),
  ('statement -> expression','statement',1,'p_statement','jolt_yacc.py',29),
  ('statement -> if_statement','statement',1,'p_statement','jolt_yacc.py',30),
  ('statement -> loop','statement',1,'p_statement','jolt_yacc.py',31),
  ('statement -> assign','statement',1,'p_statement','jolt_yacc.py',32),
  ('statement -> print','statement',1,'p_statement','jolt_yacc.py',33),
  ('statement -> COMMENT','statement',1,'p_statement','jolt_yacc.py',34),
  ('arith_stmt -> expression arithm_symbol expression','arith_stmt',3,'p_expression_plus','jolt_yacc.py',38),
  ('arith_stmt -> expression error term','arith_stmt',3,'p_expression_plus','jolt_yacc.py',39),
  ('expression -> symbol','expression',1,'p_expression_symbol','jolt_yacc.py',64),
  ('expression -> compar_stmt','expression',1,'p_expression_stmt_types','jolt_yacc.py',68),
  ('expression -> arith_stmt','expression',1,'p_expression_stmt_types','jolt_yacc.py',69),
  ('symbol -> arithm_symbol','symbol',1,'p_expr_symbols','jolt_yacc.py',73),
  ('symbol -> compar_symbol','symbol',1,'p_expr_symbols','jolt_yacc.py',74),
  ('arithm_symbol -> PLUS','arithm_symbol',1,'p_symbol_arithm','jolt_yacc.py',79),
  ('arithm_symbol -> MINUS','arithm_symbol',1,'p_symbol_arithm','jolt_yacc.py',80),
  ('arithm_symbol -> DIVIDE','arithm_symbol',1,'p_symbol_arithm','jolt_yacc.py',81),
  ('arithm_symbol -> TIMES','arithm_symbol',1,'p_symbol_arithm','jolt_yacc.py',82),
  ('arithm_symbol -> MODULUS','arithm_symbol',1,'p_symbol_arithm','jolt_yacc.py',83),
  ('compar_symbol -> GREATER_THAN','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',87),
  ('compar_symbol -> LESS_THAN','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',88),
  ('compar_symbol -> EQUAL','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',89),
  ('compar_symbol -> NOT_EQUAL','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',90),
  ('compar_symbol -> GREATER_EQUAL','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',91),
  ('compar_symbol -> LESS_EQUAL','compar_symbol',1,'p_symbol_comparison','jolt_yacc.py',92),
  ('arith_stmt -> IDENTIFIER arithm_symbol term','arith_stmt',3,'p_expression_withidentifier','jolt_yacc.py',96),
  ('arith_stmt -> IDENTIFIER error term','arith_stmt',3,'p_expression_withidentifier','jolt_yacc.py',97),
  ('compar_stmt -> factor compar_symbol factor','compar_stmt',3,'p_expression_comparison','jolt_yacc.py',128),
  ('compar_stmt -> factor error factor','compar_stmt',3,'p_expression_comparison','jolt_yacc.py',129),
  ('compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER','compar_stmt',3,'p_expression_comparison2','jolt_yacc.py',147),
  ('compar_stmt -> IDENTIFIER compar_symbol factor','compar_stmt',3,'p_expression_comparison2','jolt_yacc.py',148),
  ('compar_stmt -> IDENTIFIER error factor','compar_stmt',3,'p_expression_comparison2','jolt_yacc.py',149),
  ('compar_stmt -> IDENTIFIER error IDENTIFIER','compar_stmt',3,'p_expression_comparison2','jolt_yacc.py',150),
  ('expression -> term','expression',1,'p_expression_term','jolt_yacc.py',190),
  ('term -> factor','term',1,'p_term_factor','jolt_yacc.py',194),
  ('arith_symbol -> factor arithm_symbol factor','arith_symbol',3,'p_term_times_div_factors','jolt_yacc.py',198),
  ('factor -> NUMBA','factor',1,'p_factor_digit','jolt_yacc.py',211),
  ('factor -> DECI','factor',1,'p_factor_digit','jolt_yacc.py',212),
  ('term -> IDENTIFIER','term',1,'p_term_factor_iden','jolt_yacc.py',217),
  ('factor -> OPENBRACE expression CLOSEBRACE','factor',3,'p_factor_expr','jolt_yacc.py',224),
  ('if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER','if_statement',8,'p_if_statement','jolt_yacc.py',229),
  ('if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER','if_statement',10,'p_if_statement','jolt_yacc.py',230),
  ('if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER','if_statement',16,'p_if_statement','jolt_yacc.py',231),
  ('if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER','if_statement',8,'p_if_statement','jolt_yacc.py',232),
  ('loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER','loop',8,'p_statement_forloop','jolt_yacc.py',253),
  ('loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER','loop',10,'p_statement_forloop','jolt_yacc.py',254),
  ('assign -> IDENTIFIER ASSIGNMENT expression','assign',3,'p_assign','jolt_yacc.py',271),
  ('assign -> IDENTIFIER ASSIGNMENT WUD','assign',3,'p_assign','jolt_yacc.py',272),
  ('assign -> IDENTIFIER ASSIGNMENT LETTA','assign',3,'p_assign','jolt_yacc.py',273),
  ('assign -> IDENTIFIER ASSIGNMENT WHICHEVA','assign',3,'p_assign','jolt_yacc.py',274),
  ('print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE','print',4,'p_print_show','jolt_yacc.py',281),
  ('print -> SHOW OPENBRACE factor CLOSEBRACE','print',4,'p_print_show2','jolt_yacc.py',290),
  ('print -> SHOW OPENBRACE WUD CLOSEBRACE','print',4,'p_print_show2','jolt_yacc.py',291),
  ('print -> SHOW OPENBRACE LETTA CLOSEBRACE','print',4,'p_print_show2','jolt_yacc.py',292),
  ('print -> SHOW OPENBRACE error CLOSEBRACE','print',4,'p_print_show2','jolt_yacc.py',293),
]
