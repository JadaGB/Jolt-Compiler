Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    COMMENT
    END_LINE
    NOT
    OR
    deci
    letta
    numba
    wud

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     statement -> expression
Rule 3     statement -> if_statement
Rule 4     statement -> assign
Rule 5     statement -> print
Rule 6     arith_stmt -> expression arithm_symbol expression
Rule 7     arith_stmt -> expression error term
Rule 8     expression -> symbol
Rule 9     expression -> compar_stmt
Rule 10    expression -> arith_stmt
Rule 11    symbol -> arithm_symbol
Rule 12    symbol -> compar_symbol
Rule 13    arithm_symbol -> PLUS
Rule 14    arithm_symbol -> MINUS
Rule 15    arithm_symbol -> DIVIDE
Rule 16    arithm_symbol -> TIMES
Rule 17    arithm_symbol -> MODULUS
Rule 18    compar_symbol -> GREATER_THAN
Rule 19    compar_symbol -> LESS_THAN
Rule 20    compar_symbol -> EQUAL
Rule 21    compar_symbol -> NOT_EQUAL
Rule 22    compar_symbol -> GREATER_EQUAL
Rule 23    compar_symbol -> LESS_EQUAL
Rule 24    arith_stmt -> IDENTIFIER arithm_symbol term
Rule 25    arith_stmt -> IDENTIFIER error term
Rule 26    compar_stmt -> factor compar_symbol factor
Rule 27    compar_stmt -> factor error factor
Rule 28    compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER
Rule 29    compar_stmt -> IDENTIFIER compar_symbol factor
Rule 30    compar_stmt -> IDENTIFIER error factor
Rule 31    compar_stmt -> IDENTIFIER error IDENTIFIER
Rule 32    expression -> term
Rule 33    term -> factor
Rule 34    arith_symbol -> factor arithm_symbol factor
Rule 35    factor -> NUMBA
Rule 36    factor -> DECI
Rule 37    term -> IDENTIFIER
Rule 38    factor -> OPENBRACE expression CLOSEBRACE
Rule 39    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
Rule 40    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
Rule 41    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
Rule 42    if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
Rule 43    assign -> IDENTIFIER ASSIGNMENT expression
Rule 44    assign -> IDENTIFIER ASSIGNMENT WUD
Rule 45    assign -> IDENTIFIER ASSIGNMENT LETTA
Rule 46    assign -> IDENTIFIER ASSIGNMENT WHICHEVA
Rule 47    print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE
Rule 48    print -> SHOW OPENBRACE factor CLOSEBRACE
Rule 49    print -> SHOW OPENBRACE WUD CLOSEBRACE
Rule 50    print -> SHOW OPENBRACE LETTA CLOSEBRACE
Rule 51    print -> SHOW OPENBRACE error CLOSEBRACE

Terminals, with rules where they appear

AND                  : 
ASSIGNMENT           : 43 44 45 46
CLOSEBRACE           : 38 39 40 41 41 42 47 48 49 50 51
COLON                : 
COMMENT              : 
DECI                 : 36
DEN                  : 39 40 41 41 42
DIVIDE               : 15
DOUBLE_GREATER       : 39 40 41 42
DOUBLE_LESS          : 39 40 41 42
EF                   : 39 40 41 42
EFNOT                : 40 41
END_LINE             : 
EQUAL                : 20
GREATER_EQUAL        : 22
GREATER_THAN         : 18
IDENTIFIER           : 24 25 28 28 29 30 31 31 37 43 44 45 46 47
LESS_EQUAL           : 23
LESS_THAN            : 19
LETTA                : 45 50
MINUS                : 14
MODULUS              : 17
NOT                  : 
NOT_EQUAL            : 21
NUMBA                : 35
OPENBRACE            : 38 39 40 41 41 42 47 48 49 50 51
OR                   : 
OREF                 : 41
PLUS                 : 13
SHOW                 : 47 48 49 50 51
TIMES                : 16
WHICHEVA             : 46
WUD                  : 44 49
deci                 : 
error                : 7 25 27 30 31 42 51
letta                : 
numba                : 
wud                  : 

Nonterminals, with rules where they appear

arith_stmt           : 10
arith_symbol         : 
arithm_symbol        : 6 11 24 34
assign               : 4
compar_stmt          : 9 39 40 41 41
compar_symbol        : 12 26 28 29
expression           : 2 6 6 7 38 43
factor               : 26 26 27 27 29 30 33 34 34 48
if_statement         : 3
print                : 5
program              : 0
statement            : 1 39 40 40 41 41 41 42
symbol               : 8
term                 : 7 24 25 32

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    compar_stmt                    shift and go to state 8
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .

    $end            reduce using rule 1 (program -> statement .)


state 3

    (2) statement -> expression .
    (6) arith_stmt -> expression . arithm_symbol expression
    (7) arith_stmt -> expression . error term
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

    $end            reduce using rule 2 (statement -> expression .)
    DOUBLE_GREATER  reduce using rule 2 (statement -> expression .)
    EFNOT           reduce using rule 2 (statement -> expression .)
    OREF            reduce using rule 2 (statement -> expression .)
    error           shift and go to state 32
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

    arithm_symbol                  shift and go to state 31

state 4

    (3) statement -> if_statement .

    $end            reduce using rule 3 (statement -> if_statement .)
    DOUBLE_GREATER  reduce using rule 3 (statement -> if_statement .)
    EFNOT           reduce using rule 3 (statement -> if_statement .)
    OREF            reduce using rule 3 (statement -> if_statement .)


state 5

    (4) statement -> assign .

    $end            reduce using rule 4 (statement -> assign .)
    DOUBLE_GREATER  reduce using rule 4 (statement -> assign .)
    EFNOT           reduce using rule 4 (statement -> assign .)
    OREF            reduce using rule 4 (statement -> assign .)


state 6

    (5) statement -> print .

    $end            reduce using rule 5 (statement -> print .)
    DOUBLE_GREATER  reduce using rule 5 (statement -> print .)
    EFNOT           reduce using rule 5 (statement -> print .)
    OREF            reduce using rule 5 (statement -> print .)


state 7

    (8) expression -> symbol .

    error           reduce using rule 8 (expression -> symbol .)
    PLUS            reduce using rule 8 (expression -> symbol .)
    MINUS           reduce using rule 8 (expression -> symbol .)
    DIVIDE          reduce using rule 8 (expression -> symbol .)
    TIMES           reduce using rule 8 (expression -> symbol .)
    MODULUS         reduce using rule 8 (expression -> symbol .)
    $end            reduce using rule 8 (expression -> symbol .)
    CLOSEBRACE      reduce using rule 8 (expression -> symbol .)
    DOUBLE_GREATER  reduce using rule 8 (expression -> symbol .)
    EFNOT           reduce using rule 8 (expression -> symbol .)
    OREF            reduce using rule 8 (expression -> symbol .)


state 8

    (9) expression -> compar_stmt .

    error           reduce using rule 9 (expression -> compar_stmt .)
    PLUS            reduce using rule 9 (expression -> compar_stmt .)
    MINUS           reduce using rule 9 (expression -> compar_stmt .)
    DIVIDE          reduce using rule 9 (expression -> compar_stmt .)
    TIMES           reduce using rule 9 (expression -> compar_stmt .)
    MODULUS         reduce using rule 9 (expression -> compar_stmt .)
    $end            reduce using rule 9 (expression -> compar_stmt .)
    CLOSEBRACE      reduce using rule 9 (expression -> compar_stmt .)
    DOUBLE_GREATER  reduce using rule 9 (expression -> compar_stmt .)
    EFNOT           reduce using rule 9 (expression -> compar_stmt .)
    OREF            reduce using rule 9 (expression -> compar_stmt .)


state 9

    (10) expression -> arith_stmt .

    error           reduce using rule 10 (expression -> arith_stmt .)
    PLUS            reduce using rule 10 (expression -> arith_stmt .)
    MINUS           reduce using rule 10 (expression -> arith_stmt .)
    DIVIDE          reduce using rule 10 (expression -> arith_stmt .)
    TIMES           reduce using rule 10 (expression -> arith_stmt .)
    MODULUS         reduce using rule 10 (expression -> arith_stmt .)
    $end            reduce using rule 10 (expression -> arith_stmt .)
    CLOSEBRACE      reduce using rule 10 (expression -> arith_stmt .)
    DOUBLE_GREATER  reduce using rule 10 (expression -> arith_stmt .)
    EFNOT           reduce using rule 10 (expression -> arith_stmt .)
    OREF            reduce using rule 10 (expression -> arith_stmt .)


state 10

    (32) expression -> term .

    error           reduce using rule 32 (expression -> term .)
    PLUS            reduce using rule 32 (expression -> term .)
    MINUS           reduce using rule 32 (expression -> term .)
    DIVIDE          reduce using rule 32 (expression -> term .)
    TIMES           reduce using rule 32 (expression -> term .)
    MODULUS         reduce using rule 32 (expression -> term .)
    $end            reduce using rule 32 (expression -> term .)
    CLOSEBRACE      reduce using rule 32 (expression -> term .)
    DOUBLE_GREATER  reduce using rule 32 (expression -> term .)
    EFNOT           reduce using rule 32 (expression -> term .)
    OREF            reduce using rule 32 (expression -> term .)


state 11

    (39) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> DOUBLE_LESS . EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER

    EF              shift and go to state 33


state 12

    (38) factor -> OPENBRACE . expression CLOSEBRACE
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 35
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    expression                     shift and go to state 34
    symbol                         shift and go to state 7
    compar_stmt                    shift and go to state 8
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17
    factor                         shift and go to state 15

state 13

    (43) assign -> IDENTIFIER . ASSIGNMENT expression
    (44) assign -> IDENTIFIER . ASSIGNMENT WUD
    (45) assign -> IDENTIFIER . ASSIGNMENT LETTA
    (46) assign -> IDENTIFIER . ASSIGNMENT WHICHEVA
    (28) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (29) compar_stmt -> IDENTIFIER . compar_symbol factor
    (30) compar_stmt -> IDENTIFIER . error factor
    (31) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (24) arith_stmt -> IDENTIFIER . arithm_symbol term
    (25) arith_stmt -> IDENTIFIER . error term
    (37) term -> IDENTIFIER .
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    ASSIGNMENT      shift and go to state 36
    error           shift and go to state 38
    $end            reduce using rule 37 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 37 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 37 (term -> IDENTIFIER .)
    OREF            reduce using rule 37 (term -> IDENTIFIER .)
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

  ! error           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 37 (term -> IDENTIFIER .) ]

    compar_symbol                  shift and go to state 37
    arithm_symbol                  shift and go to state 39

state 14

    (47) print -> SHOW . OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> SHOW . OPENBRACE factor CLOSEBRACE
    (49) print -> SHOW . OPENBRACE WUD CLOSEBRACE
    (50) print -> SHOW . OPENBRACE LETTA CLOSEBRACE
    (51) print -> SHOW . OPENBRACE error CLOSEBRACE

    OPENBRACE       shift and go to state 40


state 15

    (26) compar_stmt -> factor . compar_symbol factor
    (27) compar_stmt -> factor . error factor
    (33) term -> factor .
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL

  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 42
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    TIMES           reduce using rule 33 (term -> factor .)
    MODULUS         reduce using rule 33 (term -> factor .)
    $end            reduce using rule 33 (term -> factor .)
    CLOSEBRACE      reduce using rule 33 (term -> factor .)
    DOUBLE_GREATER  reduce using rule 33 (term -> factor .)
    EFNOT           reduce using rule 33 (term -> factor .)
    OREF            reduce using rule 33 (term -> factor .)
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28

  ! error           [ reduce using rule 33 (term -> factor .) ]

    compar_symbol                  shift and go to state 41

state 16

    (11) symbol -> arithm_symbol .

    error           reduce using rule 11 (symbol -> arithm_symbol .)
    PLUS            reduce using rule 11 (symbol -> arithm_symbol .)
    MINUS           reduce using rule 11 (symbol -> arithm_symbol .)
    DIVIDE          reduce using rule 11 (symbol -> arithm_symbol .)
    TIMES           reduce using rule 11 (symbol -> arithm_symbol .)
    MODULUS         reduce using rule 11 (symbol -> arithm_symbol .)
    $end            reduce using rule 11 (symbol -> arithm_symbol .)
    CLOSEBRACE      reduce using rule 11 (symbol -> arithm_symbol .)
    DOUBLE_GREATER  reduce using rule 11 (symbol -> arithm_symbol .)
    EFNOT           reduce using rule 11 (symbol -> arithm_symbol .)
    OREF            reduce using rule 11 (symbol -> arithm_symbol .)


state 17

    (12) symbol -> compar_symbol .

    error           reduce using rule 12 (symbol -> compar_symbol .)
    PLUS            reduce using rule 12 (symbol -> compar_symbol .)
    MINUS           reduce using rule 12 (symbol -> compar_symbol .)
    DIVIDE          reduce using rule 12 (symbol -> compar_symbol .)
    TIMES           reduce using rule 12 (symbol -> compar_symbol .)
    MODULUS         reduce using rule 12 (symbol -> compar_symbol .)
    $end            reduce using rule 12 (symbol -> compar_symbol .)
    CLOSEBRACE      reduce using rule 12 (symbol -> compar_symbol .)
    DOUBLE_GREATER  reduce using rule 12 (symbol -> compar_symbol .)
    EFNOT           reduce using rule 12 (symbol -> compar_symbol .)
    OREF            reduce using rule 12 (symbol -> compar_symbol .)


state 18

    (13) arithm_symbol -> PLUS .

    error           reduce using rule 13 (arithm_symbol -> PLUS .)
    PLUS            reduce using rule 13 (arithm_symbol -> PLUS .)
    MINUS           reduce using rule 13 (arithm_symbol -> PLUS .)
    DIVIDE          reduce using rule 13 (arithm_symbol -> PLUS .)
    TIMES           reduce using rule 13 (arithm_symbol -> PLUS .)
    MODULUS         reduce using rule 13 (arithm_symbol -> PLUS .)
    $end            reduce using rule 13 (arithm_symbol -> PLUS .)
    IDENTIFIER      reduce using rule 13 (arithm_symbol -> PLUS .)
    GREATER_THAN    reduce using rule 13 (arithm_symbol -> PLUS .)
    LESS_THAN       reduce using rule 13 (arithm_symbol -> PLUS .)
    EQUAL           reduce using rule 13 (arithm_symbol -> PLUS .)
    NOT_EQUAL       reduce using rule 13 (arithm_symbol -> PLUS .)
    GREATER_EQUAL   reduce using rule 13 (arithm_symbol -> PLUS .)
    LESS_EQUAL      reduce using rule 13 (arithm_symbol -> PLUS .)
    NUMBA           reduce using rule 13 (arithm_symbol -> PLUS .)
    DECI            reduce using rule 13 (arithm_symbol -> PLUS .)
    OPENBRACE       reduce using rule 13 (arithm_symbol -> PLUS .)
    CLOSEBRACE      reduce using rule 13 (arithm_symbol -> PLUS .)
    DOUBLE_GREATER  reduce using rule 13 (arithm_symbol -> PLUS .)
    EFNOT           reduce using rule 13 (arithm_symbol -> PLUS .)
    OREF            reduce using rule 13 (arithm_symbol -> PLUS .)


state 19

    (14) arithm_symbol -> MINUS .

    error           reduce using rule 14 (arithm_symbol -> MINUS .)
    PLUS            reduce using rule 14 (arithm_symbol -> MINUS .)
    MINUS           reduce using rule 14 (arithm_symbol -> MINUS .)
    DIVIDE          reduce using rule 14 (arithm_symbol -> MINUS .)
    TIMES           reduce using rule 14 (arithm_symbol -> MINUS .)
    MODULUS         reduce using rule 14 (arithm_symbol -> MINUS .)
    $end            reduce using rule 14 (arithm_symbol -> MINUS .)
    IDENTIFIER      reduce using rule 14 (arithm_symbol -> MINUS .)
    GREATER_THAN    reduce using rule 14 (arithm_symbol -> MINUS .)
    LESS_THAN       reduce using rule 14 (arithm_symbol -> MINUS .)
    EQUAL           reduce using rule 14 (arithm_symbol -> MINUS .)
    NOT_EQUAL       reduce using rule 14 (arithm_symbol -> MINUS .)
    GREATER_EQUAL   reduce using rule 14 (arithm_symbol -> MINUS .)
    LESS_EQUAL      reduce using rule 14 (arithm_symbol -> MINUS .)
    NUMBA           reduce using rule 14 (arithm_symbol -> MINUS .)
    DECI            reduce using rule 14 (arithm_symbol -> MINUS .)
    OPENBRACE       reduce using rule 14 (arithm_symbol -> MINUS .)
    CLOSEBRACE      reduce using rule 14 (arithm_symbol -> MINUS .)
    DOUBLE_GREATER  reduce using rule 14 (arithm_symbol -> MINUS .)
    EFNOT           reduce using rule 14 (arithm_symbol -> MINUS .)
    OREF            reduce using rule 14 (arithm_symbol -> MINUS .)


state 20

    (15) arithm_symbol -> DIVIDE .

    error           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    PLUS            reduce using rule 15 (arithm_symbol -> DIVIDE .)
    MINUS           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    DIVIDE          reduce using rule 15 (arithm_symbol -> DIVIDE .)
    TIMES           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    MODULUS         reduce using rule 15 (arithm_symbol -> DIVIDE .)
    $end            reduce using rule 15 (arithm_symbol -> DIVIDE .)
    IDENTIFIER      reduce using rule 15 (arithm_symbol -> DIVIDE .)
    GREATER_THAN    reduce using rule 15 (arithm_symbol -> DIVIDE .)
    LESS_THAN       reduce using rule 15 (arithm_symbol -> DIVIDE .)
    EQUAL           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    NOT_EQUAL       reduce using rule 15 (arithm_symbol -> DIVIDE .)
    GREATER_EQUAL   reduce using rule 15 (arithm_symbol -> DIVIDE .)
    LESS_EQUAL      reduce using rule 15 (arithm_symbol -> DIVIDE .)
    NUMBA           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    DECI            reduce using rule 15 (arithm_symbol -> DIVIDE .)
    OPENBRACE       reduce using rule 15 (arithm_symbol -> DIVIDE .)
    CLOSEBRACE      reduce using rule 15 (arithm_symbol -> DIVIDE .)
    DOUBLE_GREATER  reduce using rule 15 (arithm_symbol -> DIVIDE .)
    EFNOT           reduce using rule 15 (arithm_symbol -> DIVIDE .)
    OREF            reduce using rule 15 (arithm_symbol -> DIVIDE .)


state 21

    (16) arithm_symbol -> TIMES .

    error           reduce using rule 16 (arithm_symbol -> TIMES .)
    PLUS            reduce using rule 16 (arithm_symbol -> TIMES .)
    MINUS           reduce using rule 16 (arithm_symbol -> TIMES .)
    DIVIDE          reduce using rule 16 (arithm_symbol -> TIMES .)
    TIMES           reduce using rule 16 (arithm_symbol -> TIMES .)
    MODULUS         reduce using rule 16 (arithm_symbol -> TIMES .)
    $end            reduce using rule 16 (arithm_symbol -> TIMES .)
    IDENTIFIER      reduce using rule 16 (arithm_symbol -> TIMES .)
    GREATER_THAN    reduce using rule 16 (arithm_symbol -> TIMES .)
    LESS_THAN       reduce using rule 16 (arithm_symbol -> TIMES .)
    EQUAL           reduce using rule 16 (arithm_symbol -> TIMES .)
    NOT_EQUAL       reduce using rule 16 (arithm_symbol -> TIMES .)
    GREATER_EQUAL   reduce using rule 16 (arithm_symbol -> TIMES .)
    LESS_EQUAL      reduce using rule 16 (arithm_symbol -> TIMES .)
    NUMBA           reduce using rule 16 (arithm_symbol -> TIMES .)
    DECI            reduce using rule 16 (arithm_symbol -> TIMES .)
    OPENBRACE       reduce using rule 16 (arithm_symbol -> TIMES .)
    CLOSEBRACE      reduce using rule 16 (arithm_symbol -> TIMES .)
    DOUBLE_GREATER  reduce using rule 16 (arithm_symbol -> TIMES .)
    EFNOT           reduce using rule 16 (arithm_symbol -> TIMES .)
    OREF            reduce using rule 16 (arithm_symbol -> TIMES .)


state 22

    (17) arithm_symbol -> MODULUS .

    error           reduce using rule 17 (arithm_symbol -> MODULUS .)
    PLUS            reduce using rule 17 (arithm_symbol -> MODULUS .)
    MINUS           reduce using rule 17 (arithm_symbol -> MODULUS .)
    DIVIDE          reduce using rule 17 (arithm_symbol -> MODULUS .)
    TIMES           reduce using rule 17 (arithm_symbol -> MODULUS .)
    MODULUS         reduce using rule 17 (arithm_symbol -> MODULUS .)
    $end            reduce using rule 17 (arithm_symbol -> MODULUS .)
    IDENTIFIER      reduce using rule 17 (arithm_symbol -> MODULUS .)
    GREATER_THAN    reduce using rule 17 (arithm_symbol -> MODULUS .)
    LESS_THAN       reduce using rule 17 (arithm_symbol -> MODULUS .)
    EQUAL           reduce using rule 17 (arithm_symbol -> MODULUS .)
    NOT_EQUAL       reduce using rule 17 (arithm_symbol -> MODULUS .)
    GREATER_EQUAL   reduce using rule 17 (arithm_symbol -> MODULUS .)
    LESS_EQUAL      reduce using rule 17 (arithm_symbol -> MODULUS .)
    NUMBA           reduce using rule 17 (arithm_symbol -> MODULUS .)
    DECI            reduce using rule 17 (arithm_symbol -> MODULUS .)
    OPENBRACE       reduce using rule 17 (arithm_symbol -> MODULUS .)
    CLOSEBRACE      reduce using rule 17 (arithm_symbol -> MODULUS .)
    DOUBLE_GREATER  reduce using rule 17 (arithm_symbol -> MODULUS .)
    EFNOT           reduce using rule 17 (arithm_symbol -> MODULUS .)
    OREF            reduce using rule 17 (arithm_symbol -> MODULUS .)


state 23

    (18) compar_symbol -> GREATER_THAN .

    error           reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    PLUS            reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    MINUS           reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    DIVIDE          reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    TIMES           reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    MODULUS         reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    $end            reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    CLOSEBRACE      reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    NUMBA           reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    DECI            reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    OPENBRACE       reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    DOUBLE_GREATER  reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    EFNOT           reduce using rule 18 (compar_symbol -> GREATER_THAN .)
    OREF            reduce using rule 18 (compar_symbol -> GREATER_THAN .)


state 24

    (19) compar_symbol -> LESS_THAN .

    error           reduce using rule 19 (compar_symbol -> LESS_THAN .)
    PLUS            reduce using rule 19 (compar_symbol -> LESS_THAN .)
    MINUS           reduce using rule 19 (compar_symbol -> LESS_THAN .)
    DIVIDE          reduce using rule 19 (compar_symbol -> LESS_THAN .)
    TIMES           reduce using rule 19 (compar_symbol -> LESS_THAN .)
    MODULUS         reduce using rule 19 (compar_symbol -> LESS_THAN .)
    $end            reduce using rule 19 (compar_symbol -> LESS_THAN .)
    CLOSEBRACE      reduce using rule 19 (compar_symbol -> LESS_THAN .)
    IDENTIFIER      reduce using rule 19 (compar_symbol -> LESS_THAN .)
    NUMBA           reduce using rule 19 (compar_symbol -> LESS_THAN .)
    DECI            reduce using rule 19 (compar_symbol -> LESS_THAN .)
    OPENBRACE       reduce using rule 19 (compar_symbol -> LESS_THAN .)
    DOUBLE_GREATER  reduce using rule 19 (compar_symbol -> LESS_THAN .)
    EFNOT           reduce using rule 19 (compar_symbol -> LESS_THAN .)
    OREF            reduce using rule 19 (compar_symbol -> LESS_THAN .)


state 25

    (20) compar_symbol -> EQUAL .

    error           reduce using rule 20 (compar_symbol -> EQUAL .)
    PLUS            reduce using rule 20 (compar_symbol -> EQUAL .)
    MINUS           reduce using rule 20 (compar_symbol -> EQUAL .)
    DIVIDE          reduce using rule 20 (compar_symbol -> EQUAL .)
    TIMES           reduce using rule 20 (compar_symbol -> EQUAL .)
    MODULUS         reduce using rule 20 (compar_symbol -> EQUAL .)
    $end            reduce using rule 20 (compar_symbol -> EQUAL .)
    CLOSEBRACE      reduce using rule 20 (compar_symbol -> EQUAL .)
    IDENTIFIER      reduce using rule 20 (compar_symbol -> EQUAL .)
    NUMBA           reduce using rule 20 (compar_symbol -> EQUAL .)
    DECI            reduce using rule 20 (compar_symbol -> EQUAL .)
    OPENBRACE       reduce using rule 20 (compar_symbol -> EQUAL .)
    DOUBLE_GREATER  reduce using rule 20 (compar_symbol -> EQUAL .)
    EFNOT           reduce using rule 20 (compar_symbol -> EQUAL .)
    OREF            reduce using rule 20 (compar_symbol -> EQUAL .)


state 26

    (21) compar_symbol -> NOT_EQUAL .

    error           reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    PLUS            reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    MINUS           reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    DIVIDE          reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    TIMES           reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    MODULUS         reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    $end            reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    CLOSEBRACE      reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    IDENTIFIER      reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    NUMBA           reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    DECI            reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    OPENBRACE       reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    DOUBLE_GREATER  reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    EFNOT           reduce using rule 21 (compar_symbol -> NOT_EQUAL .)
    OREF            reduce using rule 21 (compar_symbol -> NOT_EQUAL .)


state 27

    (22) compar_symbol -> GREATER_EQUAL .

    error           reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    PLUS            reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    MINUS           reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    DIVIDE          reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    TIMES           reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    MODULUS         reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    $end            reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    CLOSEBRACE      reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    IDENTIFIER      reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    NUMBA           reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    DECI            reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    OPENBRACE       reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    DOUBLE_GREATER  reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    EFNOT           reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)
    OREF            reduce using rule 22 (compar_symbol -> GREATER_EQUAL .)


state 28

    (23) compar_symbol -> LESS_EQUAL .

    error           reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    PLUS            reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    MINUS           reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    DIVIDE          reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    TIMES           reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    MODULUS         reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    $end            reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    CLOSEBRACE      reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    IDENTIFIER      reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    NUMBA           reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    DECI            reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    OPENBRACE       reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    DOUBLE_GREATER  reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    EFNOT           reduce using rule 23 (compar_symbol -> LESS_EQUAL .)
    OREF            reduce using rule 23 (compar_symbol -> LESS_EQUAL .)


state 29

    (35) factor -> NUMBA .

    error           reduce using rule 35 (factor -> NUMBA .)
    GREATER_THAN    reduce using rule 35 (factor -> NUMBA .)
    LESS_THAN       reduce using rule 35 (factor -> NUMBA .)
    EQUAL           reduce using rule 35 (factor -> NUMBA .)
    NOT_EQUAL       reduce using rule 35 (factor -> NUMBA .)
    GREATER_EQUAL   reduce using rule 35 (factor -> NUMBA .)
    LESS_EQUAL      reduce using rule 35 (factor -> NUMBA .)
    PLUS            reduce using rule 35 (factor -> NUMBA .)
    MINUS           reduce using rule 35 (factor -> NUMBA .)
    DIVIDE          reduce using rule 35 (factor -> NUMBA .)
    TIMES           reduce using rule 35 (factor -> NUMBA .)
    MODULUS         reduce using rule 35 (factor -> NUMBA .)
    $end            reduce using rule 35 (factor -> NUMBA .)
    CLOSEBRACE      reduce using rule 35 (factor -> NUMBA .)
    DOUBLE_GREATER  reduce using rule 35 (factor -> NUMBA .)
    EFNOT           reduce using rule 35 (factor -> NUMBA .)
    OREF            reduce using rule 35 (factor -> NUMBA .)


state 30

    (36) factor -> DECI .

    error           reduce using rule 36 (factor -> DECI .)
    GREATER_THAN    reduce using rule 36 (factor -> DECI .)
    LESS_THAN       reduce using rule 36 (factor -> DECI .)
    EQUAL           reduce using rule 36 (factor -> DECI .)
    NOT_EQUAL       reduce using rule 36 (factor -> DECI .)
    GREATER_EQUAL   reduce using rule 36 (factor -> DECI .)
    LESS_EQUAL      reduce using rule 36 (factor -> DECI .)
    PLUS            reduce using rule 36 (factor -> DECI .)
    MINUS           reduce using rule 36 (factor -> DECI .)
    DIVIDE          reduce using rule 36 (factor -> DECI .)
    TIMES           reduce using rule 36 (factor -> DECI .)
    MODULUS         reduce using rule 36 (factor -> DECI .)
    $end            reduce using rule 36 (factor -> DECI .)
    CLOSEBRACE      reduce using rule 36 (factor -> DECI .)
    DOUBLE_GREATER  reduce using rule 36 (factor -> DECI .)
    EFNOT           reduce using rule 36 (factor -> DECI .)
    OREF            reduce using rule 36 (factor -> DECI .)


state 31

    (6) arith_stmt -> expression arithm_symbol . expression
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 35
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    expression                     shift and go to state 43
    arithm_symbol                  shift and go to state 16
    symbol                         shift and go to state 7
    compar_stmt                    shift and go to state 8
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    compar_symbol                  shift and go to state 17
    factor                         shift and go to state 15

state 32

    (7) arith_stmt -> expression error . term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 46
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    term                           shift and go to state 44
    factor                         shift and go to state 45

state 33

    (39) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> DOUBLE_LESS EF . OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER

    OPENBRACE       shift and go to state 47


state 34

    (38) factor -> OPENBRACE expression . CLOSEBRACE
    (6) arith_stmt -> expression . arithm_symbol expression
    (7) arith_stmt -> expression . error term
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

    CLOSEBRACE      shift and go to state 48
    error           shift and go to state 32
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

    arithm_symbol                  shift and go to state 31

state 35

    (28) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (29) compar_stmt -> IDENTIFIER . compar_symbol factor
    (30) compar_stmt -> IDENTIFIER . error factor
    (31) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (24) arith_stmt -> IDENTIFIER . arithm_symbol term
    (25) arith_stmt -> IDENTIFIER . error term
    (37) term -> IDENTIFIER .
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    error           shift and go to state 38
    CLOSEBRACE      reduce using rule 37 (term -> IDENTIFIER .)
    $end            reduce using rule 37 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 37 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 37 (term -> IDENTIFIER .)
    OREF            reduce using rule 37 (term -> IDENTIFIER .)
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

  ! error           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 37 (term -> IDENTIFIER .) ]

    compar_symbol                  shift and go to state 37
    arithm_symbol                  shift and go to state 39

state 36

    (43) assign -> IDENTIFIER ASSIGNMENT . expression
    (44) assign -> IDENTIFIER ASSIGNMENT . WUD
    (45) assign -> IDENTIFIER ASSIGNMENT . LETTA
    (46) assign -> IDENTIFIER ASSIGNMENT . WHICHEVA
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    WUD             shift and go to state 50
    LETTA           shift and go to state 51
    WHICHEVA        shift and go to state 52
    IDENTIFIER      shift and go to state 35
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    expression                     shift and go to state 49
    symbol                         shift and go to state 7
    compar_stmt                    shift and go to state 8
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17
    factor                         shift and go to state 15

state 37

    (28) compar_stmt -> IDENTIFIER compar_symbol . IDENTIFIER
    (29) compar_stmt -> IDENTIFIER compar_symbol . factor
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 53
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 54

state 38

    (30) compar_stmt -> IDENTIFIER error . factor
    (31) compar_stmt -> IDENTIFIER error . IDENTIFIER
    (25) arith_stmt -> IDENTIFIER error . term
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE
    (33) term -> . factor
    (37) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 55
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 56
    term                           shift and go to state 57

state 39

    (24) arith_stmt -> IDENTIFIER arithm_symbol . term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 46
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    term                           shift and go to state 58
    factor                         shift and go to state 45

state 40

    (47) print -> SHOW OPENBRACE . IDENTIFIER CLOSEBRACE
    (48) print -> SHOW OPENBRACE . factor CLOSEBRACE
    (49) print -> SHOW OPENBRACE . WUD CLOSEBRACE
    (50) print -> SHOW OPENBRACE . LETTA CLOSEBRACE
    (51) print -> SHOW OPENBRACE . error CLOSEBRACE
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 59
    WUD             shift and go to state 61
    LETTA           shift and go to state 62
    error           shift and go to state 63
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 60

state 41

    (26) compar_stmt -> factor compar_symbol . factor
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 64

state 42

    (27) compar_stmt -> factor error . factor
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 65

state 43

    (6) arith_stmt -> expression arithm_symbol expression .
    (6) arith_stmt -> expression . arithm_symbol expression
    (7) arith_stmt -> expression . error term
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    $end            reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .)
    CLOSEBRACE      reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .)
    DOUBLE_GREATER  reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .)
    EFNOT           reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .)
    OREF            reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .)
    error           shift and go to state 32
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

  ! error           [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]
  ! PLUS            [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]
  ! MINUS           [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]
  ! DIVIDE          [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]
  ! TIMES           [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]
  ! MODULUS         [ reduce using rule 6 (arith_stmt -> expression arithm_symbol expression .) ]

    arithm_symbol                  shift and go to state 31

state 44

    (7) arith_stmt -> expression error term .

    error           reduce using rule 7 (arith_stmt -> expression error term .)
    PLUS            reduce using rule 7 (arith_stmt -> expression error term .)
    MINUS           reduce using rule 7 (arith_stmt -> expression error term .)
    DIVIDE          reduce using rule 7 (arith_stmt -> expression error term .)
    TIMES           reduce using rule 7 (arith_stmt -> expression error term .)
    MODULUS         reduce using rule 7 (arith_stmt -> expression error term .)
    $end            reduce using rule 7 (arith_stmt -> expression error term .)
    CLOSEBRACE      reduce using rule 7 (arith_stmt -> expression error term .)
    DOUBLE_GREATER  reduce using rule 7 (arith_stmt -> expression error term .)
    EFNOT           reduce using rule 7 (arith_stmt -> expression error term .)
    OREF            reduce using rule 7 (arith_stmt -> expression error term .)


state 45

    (33) term -> factor .

    error           reduce using rule 33 (term -> factor .)
    PLUS            reduce using rule 33 (term -> factor .)
    MINUS           reduce using rule 33 (term -> factor .)
    DIVIDE          reduce using rule 33 (term -> factor .)
    TIMES           reduce using rule 33 (term -> factor .)
    MODULUS         reduce using rule 33 (term -> factor .)
    $end            reduce using rule 33 (term -> factor .)
    CLOSEBRACE      reduce using rule 33 (term -> factor .)
    DOUBLE_GREATER  reduce using rule 33 (term -> factor .)
    EFNOT           reduce using rule 33 (term -> factor .)
    OREF            reduce using rule 33 (term -> factor .)


state 46

    (37) term -> IDENTIFIER .

    error           reduce using rule 37 (term -> IDENTIFIER .)
    PLUS            reduce using rule 37 (term -> IDENTIFIER .)
    MINUS           reduce using rule 37 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 37 (term -> IDENTIFIER .)
    TIMES           reduce using rule 37 (term -> IDENTIFIER .)
    MODULUS         reduce using rule 37 (term -> IDENTIFIER .)
    $end            reduce using rule 37 (term -> IDENTIFIER .)
    CLOSEBRACE      reduce using rule 37 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 37 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 37 (term -> IDENTIFIER .)
    OREF            reduce using rule 37 (term -> IDENTIFIER .)


state 47

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> DOUBLE_LESS EF OPENBRACE . error CLOSEBRACE DEN statement DOUBLE_GREATER
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    error           shift and go to state 67
    IDENTIFIER      shift and go to state 69
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 66
    factor                         shift and go to state 68

state 48

    (38) factor -> OPENBRACE expression CLOSEBRACE .

    error           reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    GREATER_THAN    reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    LESS_THAN       reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    EQUAL           reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    NOT_EQUAL       reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    GREATER_EQUAL   reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    LESS_EQUAL      reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    PLUS            reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    MINUS           reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    DIVIDE          reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    TIMES           reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    MODULUS         reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    $end            reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    EFNOT           reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)
    OREF            reduce using rule 38 (factor -> OPENBRACE expression CLOSEBRACE .)


state 49

    (43) assign -> IDENTIFIER ASSIGNMENT expression .
    (6) arith_stmt -> expression . arithm_symbol expression
    (7) arith_stmt -> expression . error term
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS

    $end            reduce using rule 43 (assign -> IDENTIFIER ASSIGNMENT expression .)
    DOUBLE_GREATER  reduce using rule 43 (assign -> IDENTIFIER ASSIGNMENT expression .)
    EFNOT           reduce using rule 43 (assign -> IDENTIFIER ASSIGNMENT expression .)
    OREF            reduce using rule 43 (assign -> IDENTIFIER ASSIGNMENT expression .)
    error           shift and go to state 32
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22

    arithm_symbol                  shift and go to state 31

state 50

    (44) assign -> IDENTIFIER ASSIGNMENT WUD .

    $end            reduce using rule 44 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    DOUBLE_GREATER  reduce using rule 44 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    EFNOT           reduce using rule 44 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    OREF            reduce using rule 44 (assign -> IDENTIFIER ASSIGNMENT WUD .)


state 51

    (45) assign -> IDENTIFIER ASSIGNMENT LETTA .

    $end            reduce using rule 45 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    DOUBLE_GREATER  reduce using rule 45 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    EFNOT           reduce using rule 45 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    OREF            reduce using rule 45 (assign -> IDENTIFIER ASSIGNMENT LETTA .)


state 52

    (46) assign -> IDENTIFIER ASSIGNMENT WHICHEVA .

    $end            reduce using rule 46 (assign -> IDENTIFIER ASSIGNMENT WHICHEVA .)
    DOUBLE_GREATER  reduce using rule 46 (assign -> IDENTIFIER ASSIGNMENT WHICHEVA .)
    EFNOT           reduce using rule 46 (assign -> IDENTIFIER ASSIGNMENT WHICHEVA .)
    OREF            reduce using rule 46 (assign -> IDENTIFIER ASSIGNMENT WHICHEVA .)


state 53

    (28) compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .

    error           reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    PLUS            reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    MINUS           reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    DIVIDE          reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    TIMES           reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    MODULUS         reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    $end            reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    CLOSEBRACE      reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    EFNOT           reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    OREF            reduce using rule 28 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)


state 54

    (29) compar_stmt -> IDENTIFIER compar_symbol factor .

    error           reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    PLUS            reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    MINUS           reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    DIVIDE          reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    TIMES           reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    MODULUS         reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    $end            reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    CLOSEBRACE      reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    DOUBLE_GREATER  reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    EFNOT           reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    OREF            reduce using rule 29 (compar_stmt -> IDENTIFIER compar_symbol factor .)


state 55

    (31) compar_stmt -> IDENTIFIER error IDENTIFIER .
    (37) term -> IDENTIFIER .

  ! reduce/reduce conflict for error resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for MODULUS resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for CLOSEBRACE resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_GREATER resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for EFNOT resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for OREF resolved using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    error           reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    PLUS            reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    MINUS           reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    DIVIDE          reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    TIMES           reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    MODULUS         reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    $end            reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    CLOSEBRACE      reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    EFNOT           reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    OREF            reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)

  ! error           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! CLOSEBRACE      [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! DOUBLE_GREATER  [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! EFNOT           [ reduce using rule 37 (term -> IDENTIFIER .) ]
  ! OREF            [ reduce using rule 37 (term -> IDENTIFIER .) ]


state 56

    (30) compar_stmt -> IDENTIFIER error factor .
    (33) term -> factor .

  ! reduce/reduce conflict for error resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for TIMES resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for MODULUS resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for $end resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for CLOSEBRACE resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for DOUBLE_GREATER resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for EFNOT resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for OREF resolved using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    error           reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    PLUS            reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    MINUS           reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    DIVIDE          reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    TIMES           reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    MODULUS         reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    $end            reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    CLOSEBRACE      reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    DOUBLE_GREATER  reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    EFNOT           reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)
    OREF            reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)

  ! error           [ reduce using rule 33 (term -> factor .) ]
  ! PLUS            [ reduce using rule 33 (term -> factor .) ]
  ! MINUS           [ reduce using rule 33 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 33 (term -> factor .) ]
  ! TIMES           [ reduce using rule 33 (term -> factor .) ]
  ! MODULUS         [ reduce using rule 33 (term -> factor .) ]
  ! $end            [ reduce using rule 33 (term -> factor .) ]
  ! CLOSEBRACE      [ reduce using rule 33 (term -> factor .) ]
  ! DOUBLE_GREATER  [ reduce using rule 33 (term -> factor .) ]
  ! EFNOT           [ reduce using rule 33 (term -> factor .) ]
  ! OREF            [ reduce using rule 33 (term -> factor .) ]


state 57

    (25) arith_stmt -> IDENTIFIER error term .

    error           reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    PLUS            reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    MINUS           reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    DIVIDE          reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    TIMES           reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    MODULUS         reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    $end            reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    CLOSEBRACE      reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    DOUBLE_GREATER  reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    EFNOT           reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)
    OREF            reduce using rule 25 (arith_stmt -> IDENTIFIER error term .)


state 58

    (24) arith_stmt -> IDENTIFIER arithm_symbol term .

    error           reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    PLUS            reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    MINUS           reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    DIVIDE          reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    TIMES           reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    MODULUS         reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    $end            reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    CLOSEBRACE      reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    DOUBLE_GREATER  reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    EFNOT           reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    OREF            reduce using rule 24 (arith_stmt -> IDENTIFIER arithm_symbol term .)


state 59

    (47) print -> SHOW OPENBRACE IDENTIFIER . CLOSEBRACE

    CLOSEBRACE      shift and go to state 70


state 60

    (48) print -> SHOW OPENBRACE factor . CLOSEBRACE

    CLOSEBRACE      shift and go to state 71


state 61

    (49) print -> SHOW OPENBRACE WUD . CLOSEBRACE

    CLOSEBRACE      shift and go to state 72


state 62

    (50) print -> SHOW OPENBRACE LETTA . CLOSEBRACE

    CLOSEBRACE      shift and go to state 73


state 63

    (51) print -> SHOW OPENBRACE error . CLOSEBRACE

    CLOSEBRACE      shift and go to state 74


state 64

    (26) compar_stmt -> factor compar_symbol factor .

    error           reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    PLUS            reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    MINUS           reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    DIVIDE          reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    TIMES           reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    MODULUS         reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    $end            reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    CLOSEBRACE      reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    DOUBLE_GREATER  reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    EFNOT           reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)
    OREF            reduce using rule 26 (compar_stmt -> factor compar_symbol factor .)


state 65

    (27) compar_stmt -> factor error factor .

    error           reduce using rule 27 (compar_stmt -> factor error factor .)
    PLUS            reduce using rule 27 (compar_stmt -> factor error factor .)
    MINUS           reduce using rule 27 (compar_stmt -> factor error factor .)
    DIVIDE          reduce using rule 27 (compar_stmt -> factor error factor .)
    TIMES           reduce using rule 27 (compar_stmt -> factor error factor .)
    MODULUS         reduce using rule 27 (compar_stmt -> factor error factor .)
    $end            reduce using rule 27 (compar_stmt -> factor error factor .)
    CLOSEBRACE      reduce using rule 27 (compar_stmt -> factor error factor .)
    DOUBLE_GREATER  reduce using rule 27 (compar_stmt -> factor error factor .)
    EFNOT           reduce using rule 27 (compar_stmt -> factor error factor .)
    OREF            reduce using rule 27 (compar_stmt -> factor error factor .)


state 66

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 75


state 67

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE error . CLOSEBRACE DEN statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 76


state 68

    (26) compar_stmt -> factor . compar_symbol factor
    (27) compar_stmt -> factor . error factor
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL

    error           shift and go to state 42
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28

    compar_symbol                  shift and go to state 41

state 69

    (28) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (29) compar_stmt -> IDENTIFIER . compar_symbol factor
    (30) compar_stmt -> IDENTIFIER . error factor
    (31) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL

    error           shift and go to state 77
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28

    compar_symbol                  shift and go to state 37

state 70

    (47) print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .

    $end            reduce using rule 47 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 47 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    EFNOT           reduce using rule 47 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    OREF            reduce using rule 47 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)


state 71

    (48) print -> SHOW OPENBRACE factor CLOSEBRACE .

    $end            reduce using rule 48 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 48 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    EFNOT           reduce using rule 48 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    OREF            reduce using rule 48 (print -> SHOW OPENBRACE factor CLOSEBRACE .)


state 72

    (49) print -> SHOW OPENBRACE WUD CLOSEBRACE .

    $end            reduce using rule 49 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 49 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    EFNOT           reduce using rule 49 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    OREF            reduce using rule 49 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)


state 73

    (50) print -> SHOW OPENBRACE LETTA CLOSEBRACE .

    $end            reduce using rule 50 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 50 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    EFNOT           reduce using rule 50 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    OREF            reduce using rule 50 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)


state 74

    (51) print -> SHOW OPENBRACE error CLOSEBRACE .

    $end            reduce using rule 51 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 51 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    EFNOT           reduce using rule 51 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    OREF            reduce using rule 51 (print -> SHOW OPENBRACE error CLOSEBRACE .)


state 75

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    DEN             shift and go to state 78


state 76

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE . DEN statement DOUBLE_GREATER

    DEN             shift and go to state 79


state 77

    (30) compar_stmt -> IDENTIFIER error . factor
    (31) compar_stmt -> IDENTIFIER error . IDENTIFIER
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 80
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    factor                         shift and go to state 81

state 78

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 8
    statement                      shift and go to state 82
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 79

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    statement                      shift and go to state 83
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    compar_stmt                    shift and go to state 8
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 80

    (31) compar_stmt -> IDENTIFIER error IDENTIFIER .

    CLOSEBRACE      reduce using rule 31 (compar_stmt -> IDENTIFIER error IDENTIFIER .)


state 81

    (30) compar_stmt -> IDENTIFIER error factor .

    CLOSEBRACE      reduce using rule 30 (compar_stmt -> IDENTIFIER error factor .)


state 82

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . DOUBLE_GREATER
    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . EFNOT statement DOUBLE_GREATER
    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    DOUBLE_GREATER  shift and go to state 84
    EFNOT           shift and go to state 85
    OREF            shift and go to state 86


state 83

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement . DOUBLE_GREATER

    DOUBLE_GREATER  shift and go to state 87


state 84

    (39) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .

    $end            reduce using rule 39 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 39 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 39 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    OREF            reduce using rule 39 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)


state 85

    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 8
    statement                      shift and go to state 88
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 86

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF . OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    OPENBRACE       shift and go to state 89


state 87

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .

    $end            reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    OREF            reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)


state 88

    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement . DOUBLE_GREATER

    DOUBLE_GREATER  shift and go to state 90


state 89

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE . compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 69
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 91
    factor                         shift and go to state 68

state 90

    (40) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .

    $end            reduce using rule 40 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 40 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 40 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    OREF            reduce using rule 40 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)


state 91

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt . CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 92


state 92

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE . DEN statement EFNOT statement DOUBLE_GREATER

    DEN             shift and go to state 93


state 93

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN . statement EFNOT statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 8
    statement                      shift and go to state 94
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 94

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement . EFNOT statement DOUBLE_GREATER

    EFNOT           shift and go to state 95


state 95

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . assign
    (5) statement -> . print
    (8) expression -> . symbol
    (9) expression -> . compar_stmt
    (10) expression -> . arith_stmt
    (32) expression -> . term
    (39) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (40) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (41) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) assign -> . IDENTIFIER ASSIGNMENT expression
    (44) assign -> . IDENTIFIER ASSIGNMENT WUD
    (45) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (46) assign -> . IDENTIFIER ASSIGNMENT WHICHEVA
    (47) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (48) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (49) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (50) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (51) print -> . SHOW OPENBRACE error CLOSEBRACE
    (11) symbol -> . arithm_symbol
    (12) symbol -> . compar_symbol
    (26) compar_stmt -> . factor compar_symbol factor
    (27) compar_stmt -> . factor error factor
    (28) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (29) compar_stmt -> . IDENTIFIER compar_symbol factor
    (30) compar_stmt -> . IDENTIFIER error factor
    (31) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (6) arith_stmt -> . expression arithm_symbol expression
    (7) arith_stmt -> . expression error term
    (24) arith_stmt -> . IDENTIFIER arithm_symbol term
    (25) arith_stmt -> . IDENTIFIER error term
    (33) term -> . factor
    (37) term -> . IDENTIFIER
    (13) arithm_symbol -> . PLUS
    (14) arithm_symbol -> . MINUS
    (15) arithm_symbol -> . DIVIDE
    (16) arithm_symbol -> . TIMES
    (17) arithm_symbol -> . MODULUS
    (18) compar_symbol -> . GREATER_THAN
    (19) compar_symbol -> . LESS_THAN
    (20) compar_symbol -> . EQUAL
    (21) compar_symbol -> . NOT_EQUAL
    (22) compar_symbol -> . GREATER_EQUAL
    (23) compar_symbol -> . LESS_EQUAL
    (35) factor -> . NUMBA
    (36) factor -> . DECI
    (38) factor -> . OPENBRACE expression CLOSEBRACE

    DOUBLE_LESS     shift and go to state 11
    IDENTIFIER      shift and go to state 13
    SHOW            shift and go to state 14
    PLUS            shift and go to state 18
    MINUS           shift and go to state 19
    DIVIDE          shift and go to state 20
    TIMES           shift and go to state 21
    MODULUS         shift and go to state 22
    GREATER_THAN    shift and go to state 23
    LESS_THAN       shift and go to state 24
    EQUAL           shift and go to state 25
    NOT_EQUAL       shift and go to state 26
    GREATER_EQUAL   shift and go to state 27
    LESS_EQUAL      shift and go to state 28
    NUMBA           shift and go to state 29
    DECI            shift and go to state 30
    OPENBRACE       shift and go to state 12

    compar_stmt                    shift and go to state 8
    statement                      shift and go to state 96
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    assign                         shift and go to state 5
    print                          shift and go to state 6
    symbol                         shift and go to state 7
    arith_stmt                     shift and go to state 9
    term                           shift and go to state 10
    factor                         shift and go to state 15
    arithm_symbol                  shift and go to state 16
    compar_symbol                  shift and go to state 17

state 96

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement . DOUBLE_GREATER

    DOUBLE_GREATER  shift and go to state 97


state 97

    (41) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .

    $end            reduce using rule 41 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 41 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 41 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    OREF            reduce using rule 41 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 13 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 13 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 13 resolved as shift
WARNING: shift/reduce conflict for error in state 15 resolved as shift
WARNING: shift/reduce conflict for error in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 35 resolved as shift
WARNING: shift/reduce conflict for error in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 43 resolved as shift
WARNING: reduce/reduce conflict in state 55 resolved using rule (compar_stmt -> IDENTIFIER error IDENTIFIER)
WARNING: rejected rule (term -> IDENTIFIER) in state 55
WARNING: reduce/reduce conflict in state 56 resolved using rule (compar_stmt -> IDENTIFIER error factor)
WARNING: rejected rule (term -> factor) in state 56
