Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     statement -> expression
Rule 3     statement -> if_statement
Rule 4     statement -> loop
Rule 5     statement -> assign
Rule 6     statement -> print
Rule 7     statement -> COMMENT
Rule 8     statement -> statement COMMA statement
Rule 9     arith_stmt -> expression arithm_symbol expression
Rule 10    arith_stmt -> expression error term
Rule 11    expression -> symbol
Rule 12    expression -> compar_stmt
Rule 13    expression -> arith_stmt
Rule 14    symbol -> arithm_symbol
Rule 15    symbol -> compar_symbol
Rule 16    arithm_symbol -> PLUS
Rule 17    arithm_symbol -> MINUS
Rule 18    arithm_symbol -> DIVIDE
Rule 19    arithm_symbol -> TIMES
Rule 20    arithm_symbol -> MODULUS
Rule 21    compar_symbol -> GREATER_THAN
Rule 22    compar_symbol -> LESS_THAN
Rule 23    compar_symbol -> EQUAL
Rule 24    compar_symbol -> NOT_EQUAL
Rule 25    compar_symbol -> GREATER_EQUAL
Rule 26    compar_symbol -> LESS_EQUAL
Rule 27    arith_stmt -> IDENTIFIER arithm_symbol term
Rule 28    arith_stmt -> IDENTIFIER error term
Rule 29    compar_stmt -> factor compar_symbol factor
Rule 30    compar_stmt -> factor error factor
Rule 31    compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER
Rule 32    compar_stmt -> IDENTIFIER compar_symbol factor
Rule 33    compar_stmt -> IDENTIFIER error factor
Rule 34    compar_stmt -> IDENTIFIER error IDENTIFIER
Rule 35    expression -> term
Rule 36    term -> factor
Rule 37    arith_symbol -> factor arithm_symbol factor
Rule 38    factor -> NUMBA
Rule 39    factor -> DECI
Rule 40    term -> IDENTIFIER
Rule 41    factor -> OPENBRACE expression CLOSEBRACE
Rule 42    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
Rule 43    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
Rule 44    if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
Rule 45    if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
Rule 46    loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
Rule 47    loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
Rule 48    assign -> IDENTIFIER ASSIGNMENT expression
Rule 49    assign -> IDENTIFIER ASSIGNMENT WUD
Rule 50    assign -> IDENTIFIER ASSIGNMENT LETTA
Rule 51    print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE
Rule 52    print -> SHOW OPENBRACE factor CLOSEBRACE
Rule 53    print -> SHOW OPENBRACE WUD CLOSEBRACE
Rule 54    print -> SHOW OPENBRACE LETTA CLOSEBRACE
Rule 55    print -> SHOW OPENBRACE error CLOSEBRACE

Terminals, with rules where they appear

ASSIGNMENT           : 48 49 50
CLOSEBRACE           : 41 42 43 44 44 45 51 52 53 54 55
COLON                : 46 47
COMMA                : 8 47
COMMENT              : 7
DECI                 : 39
DEN                  : 42 43 44 44 45
DIVIDE               : 18
DOUBLE_GREATER       : 42 43 44 45 46 47
DOUBLE_LESS          : 42 43 44 45 46 47
EF                   : 42 43 44 45
EFNOT                : 43 44
EQUAL                : 23
GREATER_EQUAL        : 25
GREATER_THAN         : 21
IDENTIFIER           : 27 28 31 31 32 33 34 34 40 46 47 48 49 50 51
IN                   : 46 47
LESS_EQUAL           : 26
LESS_THAN            : 22
LETTA                : 50 54
MINUS                : 17
MODULUS              : 20
NOT_EQUAL            : 24
NUMBA                : 38
OPENBRACE            : 41 42 43 44 44 45 51 52 53 54 55
OREF                 : 44
PLUS                 : 16
SHOW                 : 51 52 53 54 55
TIMES                : 19
WEN                  : 46 47
WUD                  : 49 53
error                : 10 28 30 33 34 45 55

Nonterminals, with rules where they appear

arith_stmt           : 13
arith_symbol         : 
arithm_symbol        : 9 14 27 37
assign               : 5
compar_stmt          : 12 42 43 44 44
compar_symbol        : 15 29 31 32
expression           : 2 9 9 10 41 46 47 47 48
factor               : 29 29 30 30 32 33 36 37 37 52
if_statement         : 3
loop                 : 4
print                : 6
program              : 0
statement            : 1 8 8 42 43 43 44 44 44 45 46 47
symbol               : 11
term                 : 10 27 28 35

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    program                        shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (8) statement -> statement . COMMA statement

    $end            reduce using rule 1 (program -> statement .)
    COMMA           shift and go to state 33


state 3

    (2) statement -> expression .
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

    COMMA           reduce using rule 2 (statement -> expression .)
    $end            reduce using rule 2 (statement -> expression .)
    DOUBLE_GREATER  reduce using rule 2 (statement -> expression .)
    EFNOT           reduce using rule 2 (statement -> expression .)
    OREF            reduce using rule 2 (statement -> expression .)
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

    arithm_symbol                  shift and go to state 34

state 4

    (3) statement -> if_statement .

    COMMA           reduce using rule 3 (statement -> if_statement .)
    $end            reduce using rule 3 (statement -> if_statement .)
    DOUBLE_GREATER  reduce using rule 3 (statement -> if_statement .)
    EFNOT           reduce using rule 3 (statement -> if_statement .)
    OREF            reduce using rule 3 (statement -> if_statement .)


state 5

    (4) statement -> loop .

    COMMA           reduce using rule 4 (statement -> loop .)
    $end            reduce using rule 4 (statement -> loop .)
    DOUBLE_GREATER  reduce using rule 4 (statement -> loop .)
    EFNOT           reduce using rule 4 (statement -> loop .)
    OREF            reduce using rule 4 (statement -> loop .)


state 6

    (5) statement -> assign .

    COMMA           reduce using rule 5 (statement -> assign .)
    $end            reduce using rule 5 (statement -> assign .)
    DOUBLE_GREATER  reduce using rule 5 (statement -> assign .)
    EFNOT           reduce using rule 5 (statement -> assign .)
    OREF            reduce using rule 5 (statement -> assign .)


state 7

    (6) statement -> print .

    COMMA           reduce using rule 6 (statement -> print .)
    $end            reduce using rule 6 (statement -> print .)
    DOUBLE_GREATER  reduce using rule 6 (statement -> print .)
    EFNOT           reduce using rule 6 (statement -> print .)
    OREF            reduce using rule 6 (statement -> print .)


state 8

    (7) statement -> COMMENT .

    COMMA           reduce using rule 7 (statement -> COMMENT .)
    $end            reduce using rule 7 (statement -> COMMENT .)
    DOUBLE_GREATER  reduce using rule 7 (statement -> COMMENT .)
    EFNOT           reduce using rule 7 (statement -> COMMENT .)
    OREF            reduce using rule 7 (statement -> COMMENT .)


state 9

    (11) expression -> symbol .

    error           reduce using rule 11 (expression -> symbol .)
    PLUS            reduce using rule 11 (expression -> symbol .)
    MINUS           reduce using rule 11 (expression -> symbol .)
    DIVIDE          reduce using rule 11 (expression -> symbol .)
    TIMES           reduce using rule 11 (expression -> symbol .)
    MODULUS         reduce using rule 11 (expression -> symbol .)
    COMMA           reduce using rule 11 (expression -> symbol .)
    $end            reduce using rule 11 (expression -> symbol .)
    CLOSEBRACE      reduce using rule 11 (expression -> symbol .)
    DOUBLE_GREATER  reduce using rule 11 (expression -> symbol .)
    EFNOT           reduce using rule 11 (expression -> symbol .)
    OREF            reduce using rule 11 (expression -> symbol .)
    COLON           reduce using rule 11 (expression -> symbol .)


state 10

    (12) expression -> compar_stmt .

    error           reduce using rule 12 (expression -> compar_stmt .)
    PLUS            reduce using rule 12 (expression -> compar_stmt .)
    MINUS           reduce using rule 12 (expression -> compar_stmt .)
    DIVIDE          reduce using rule 12 (expression -> compar_stmt .)
    TIMES           reduce using rule 12 (expression -> compar_stmt .)
    MODULUS         reduce using rule 12 (expression -> compar_stmt .)
    COMMA           reduce using rule 12 (expression -> compar_stmt .)
    $end            reduce using rule 12 (expression -> compar_stmt .)
    CLOSEBRACE      reduce using rule 12 (expression -> compar_stmt .)
    DOUBLE_GREATER  reduce using rule 12 (expression -> compar_stmt .)
    EFNOT           reduce using rule 12 (expression -> compar_stmt .)
    OREF            reduce using rule 12 (expression -> compar_stmt .)
    COLON           reduce using rule 12 (expression -> compar_stmt .)


state 11

    (13) expression -> arith_stmt .

    error           reduce using rule 13 (expression -> arith_stmt .)
    PLUS            reduce using rule 13 (expression -> arith_stmt .)
    MINUS           reduce using rule 13 (expression -> arith_stmt .)
    DIVIDE          reduce using rule 13 (expression -> arith_stmt .)
    TIMES           reduce using rule 13 (expression -> arith_stmt .)
    MODULUS         reduce using rule 13 (expression -> arith_stmt .)
    COMMA           reduce using rule 13 (expression -> arith_stmt .)
    $end            reduce using rule 13 (expression -> arith_stmt .)
    CLOSEBRACE      reduce using rule 13 (expression -> arith_stmt .)
    DOUBLE_GREATER  reduce using rule 13 (expression -> arith_stmt .)
    EFNOT           reduce using rule 13 (expression -> arith_stmt .)
    OREF            reduce using rule 13 (expression -> arith_stmt .)
    COLON           reduce using rule 13 (expression -> arith_stmt .)


state 12

    (35) expression -> term .

    error           reduce using rule 35 (expression -> term .)
    PLUS            reduce using rule 35 (expression -> term .)
    MINUS           reduce using rule 35 (expression -> term .)
    DIVIDE          reduce using rule 35 (expression -> term .)
    TIMES           reduce using rule 35 (expression -> term .)
    MODULUS         reduce using rule 35 (expression -> term .)
    COMMA           reduce using rule 35 (expression -> term .)
    $end            reduce using rule 35 (expression -> term .)
    CLOSEBRACE      reduce using rule 35 (expression -> term .)
    DOUBLE_GREATER  reduce using rule 35 (expression -> term .)
    EFNOT           reduce using rule 35 (expression -> term .)
    OREF            reduce using rule 35 (expression -> term .)
    COLON           reduce using rule 35 (expression -> term .)


state 13

    (42) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS . EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> DOUBLE_LESS . EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> DOUBLE_LESS . WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> DOUBLE_LESS . WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER

    EF              shift and go to state 36
    WEN             shift and go to state 37


state 14

    (41) factor -> OPENBRACE . expression CLOSEBRACE
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 38
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19
    factor                         shift and go to state 17

state 15

    (48) assign -> IDENTIFIER . ASSIGNMENT expression
    (49) assign -> IDENTIFIER . ASSIGNMENT WUD
    (50) assign -> IDENTIFIER . ASSIGNMENT LETTA
    (31) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (32) compar_stmt -> IDENTIFIER . compar_symbol factor
    (33) compar_stmt -> IDENTIFIER . error factor
    (34) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (27) arith_stmt -> IDENTIFIER . arithm_symbol term
    (28) arith_stmt -> IDENTIFIER . error term
    (40) term -> IDENTIFIER .
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    ASSIGNMENT      shift and go to state 40
    error           shift and go to state 42
    COMMA           reduce using rule 40 (term -> IDENTIFIER .)
    $end            reduce using rule 40 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 40 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 40 (term -> IDENTIFIER .)
    OREF            reduce using rule 40 (term -> IDENTIFIER .)
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

  ! error           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 40 (term -> IDENTIFIER .) ]

    compar_symbol                  shift and go to state 41
    arithm_symbol                  shift and go to state 43

state 16

    (51) print -> SHOW . OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> SHOW . OPENBRACE factor CLOSEBRACE
    (53) print -> SHOW . OPENBRACE WUD CLOSEBRACE
    (54) print -> SHOW . OPENBRACE LETTA CLOSEBRACE
    (55) print -> SHOW . OPENBRACE error CLOSEBRACE

    OPENBRACE       shift and go to state 44


state 17

    (29) compar_stmt -> factor . compar_symbol factor
    (30) compar_stmt -> factor . error factor
    (36) term -> factor .
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL

  ! shift/reduce conflict for error resolved as shift
    error           shift and go to state 46
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    TIMES           reduce using rule 36 (term -> factor .)
    MODULUS         reduce using rule 36 (term -> factor .)
    COMMA           reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    CLOSEBRACE      reduce using rule 36 (term -> factor .)
    DOUBLE_GREATER  reduce using rule 36 (term -> factor .)
    EFNOT           reduce using rule 36 (term -> factor .)
    OREF            reduce using rule 36 (term -> factor .)
    COLON           reduce using rule 36 (term -> factor .)
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30

  ! error           [ reduce using rule 36 (term -> factor .) ]

    compar_symbol                  shift and go to state 45

state 18

    (14) symbol -> arithm_symbol .

    error           reduce using rule 14 (symbol -> arithm_symbol .)
    PLUS            reduce using rule 14 (symbol -> arithm_symbol .)
    MINUS           reduce using rule 14 (symbol -> arithm_symbol .)
    DIVIDE          reduce using rule 14 (symbol -> arithm_symbol .)
    TIMES           reduce using rule 14 (symbol -> arithm_symbol .)
    MODULUS         reduce using rule 14 (symbol -> arithm_symbol .)
    COMMA           reduce using rule 14 (symbol -> arithm_symbol .)
    $end            reduce using rule 14 (symbol -> arithm_symbol .)
    CLOSEBRACE      reduce using rule 14 (symbol -> arithm_symbol .)
    DOUBLE_GREATER  reduce using rule 14 (symbol -> arithm_symbol .)
    EFNOT           reduce using rule 14 (symbol -> arithm_symbol .)
    OREF            reduce using rule 14 (symbol -> arithm_symbol .)
    COLON           reduce using rule 14 (symbol -> arithm_symbol .)


state 19

    (15) symbol -> compar_symbol .

    error           reduce using rule 15 (symbol -> compar_symbol .)
    PLUS            reduce using rule 15 (symbol -> compar_symbol .)
    MINUS           reduce using rule 15 (symbol -> compar_symbol .)
    DIVIDE          reduce using rule 15 (symbol -> compar_symbol .)
    TIMES           reduce using rule 15 (symbol -> compar_symbol .)
    MODULUS         reduce using rule 15 (symbol -> compar_symbol .)
    COMMA           reduce using rule 15 (symbol -> compar_symbol .)
    $end            reduce using rule 15 (symbol -> compar_symbol .)
    CLOSEBRACE      reduce using rule 15 (symbol -> compar_symbol .)
    DOUBLE_GREATER  reduce using rule 15 (symbol -> compar_symbol .)
    EFNOT           reduce using rule 15 (symbol -> compar_symbol .)
    OREF            reduce using rule 15 (symbol -> compar_symbol .)
    COLON           reduce using rule 15 (symbol -> compar_symbol .)


state 20

    (16) arithm_symbol -> PLUS .

    error           reduce using rule 16 (arithm_symbol -> PLUS .)
    PLUS            reduce using rule 16 (arithm_symbol -> PLUS .)
    MINUS           reduce using rule 16 (arithm_symbol -> PLUS .)
    DIVIDE          reduce using rule 16 (arithm_symbol -> PLUS .)
    TIMES           reduce using rule 16 (arithm_symbol -> PLUS .)
    MODULUS         reduce using rule 16 (arithm_symbol -> PLUS .)
    COMMA           reduce using rule 16 (arithm_symbol -> PLUS .)
    $end            reduce using rule 16 (arithm_symbol -> PLUS .)
    IDENTIFIER      reduce using rule 16 (arithm_symbol -> PLUS .)
    GREATER_THAN    reduce using rule 16 (arithm_symbol -> PLUS .)
    LESS_THAN       reduce using rule 16 (arithm_symbol -> PLUS .)
    EQUAL           reduce using rule 16 (arithm_symbol -> PLUS .)
    NOT_EQUAL       reduce using rule 16 (arithm_symbol -> PLUS .)
    GREATER_EQUAL   reduce using rule 16 (arithm_symbol -> PLUS .)
    LESS_EQUAL      reduce using rule 16 (arithm_symbol -> PLUS .)
    NUMBA           reduce using rule 16 (arithm_symbol -> PLUS .)
    DECI            reduce using rule 16 (arithm_symbol -> PLUS .)
    OPENBRACE       reduce using rule 16 (arithm_symbol -> PLUS .)
    CLOSEBRACE      reduce using rule 16 (arithm_symbol -> PLUS .)
    DOUBLE_GREATER  reduce using rule 16 (arithm_symbol -> PLUS .)
    EFNOT           reduce using rule 16 (arithm_symbol -> PLUS .)
    OREF            reduce using rule 16 (arithm_symbol -> PLUS .)
    COLON           reduce using rule 16 (arithm_symbol -> PLUS .)


state 21

    (17) arithm_symbol -> MINUS .

    error           reduce using rule 17 (arithm_symbol -> MINUS .)
    PLUS            reduce using rule 17 (arithm_symbol -> MINUS .)
    MINUS           reduce using rule 17 (arithm_symbol -> MINUS .)
    DIVIDE          reduce using rule 17 (arithm_symbol -> MINUS .)
    TIMES           reduce using rule 17 (arithm_symbol -> MINUS .)
    MODULUS         reduce using rule 17 (arithm_symbol -> MINUS .)
    COMMA           reduce using rule 17 (arithm_symbol -> MINUS .)
    $end            reduce using rule 17 (arithm_symbol -> MINUS .)
    IDENTIFIER      reduce using rule 17 (arithm_symbol -> MINUS .)
    GREATER_THAN    reduce using rule 17 (arithm_symbol -> MINUS .)
    LESS_THAN       reduce using rule 17 (arithm_symbol -> MINUS .)
    EQUAL           reduce using rule 17 (arithm_symbol -> MINUS .)
    NOT_EQUAL       reduce using rule 17 (arithm_symbol -> MINUS .)
    GREATER_EQUAL   reduce using rule 17 (arithm_symbol -> MINUS .)
    LESS_EQUAL      reduce using rule 17 (arithm_symbol -> MINUS .)
    NUMBA           reduce using rule 17 (arithm_symbol -> MINUS .)
    DECI            reduce using rule 17 (arithm_symbol -> MINUS .)
    OPENBRACE       reduce using rule 17 (arithm_symbol -> MINUS .)
    CLOSEBRACE      reduce using rule 17 (arithm_symbol -> MINUS .)
    DOUBLE_GREATER  reduce using rule 17 (arithm_symbol -> MINUS .)
    EFNOT           reduce using rule 17 (arithm_symbol -> MINUS .)
    OREF            reduce using rule 17 (arithm_symbol -> MINUS .)
    COLON           reduce using rule 17 (arithm_symbol -> MINUS .)


state 22

    (18) arithm_symbol -> DIVIDE .

    error           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    PLUS            reduce using rule 18 (arithm_symbol -> DIVIDE .)
    MINUS           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    DIVIDE          reduce using rule 18 (arithm_symbol -> DIVIDE .)
    TIMES           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    MODULUS         reduce using rule 18 (arithm_symbol -> DIVIDE .)
    COMMA           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    $end            reduce using rule 18 (arithm_symbol -> DIVIDE .)
    IDENTIFIER      reduce using rule 18 (arithm_symbol -> DIVIDE .)
    GREATER_THAN    reduce using rule 18 (arithm_symbol -> DIVIDE .)
    LESS_THAN       reduce using rule 18 (arithm_symbol -> DIVIDE .)
    EQUAL           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    NOT_EQUAL       reduce using rule 18 (arithm_symbol -> DIVIDE .)
    GREATER_EQUAL   reduce using rule 18 (arithm_symbol -> DIVIDE .)
    LESS_EQUAL      reduce using rule 18 (arithm_symbol -> DIVIDE .)
    NUMBA           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    DECI            reduce using rule 18 (arithm_symbol -> DIVIDE .)
    OPENBRACE       reduce using rule 18 (arithm_symbol -> DIVIDE .)
    CLOSEBRACE      reduce using rule 18 (arithm_symbol -> DIVIDE .)
    DOUBLE_GREATER  reduce using rule 18 (arithm_symbol -> DIVIDE .)
    EFNOT           reduce using rule 18 (arithm_symbol -> DIVIDE .)
    OREF            reduce using rule 18 (arithm_symbol -> DIVIDE .)
    COLON           reduce using rule 18 (arithm_symbol -> DIVIDE .)


state 23

    (19) arithm_symbol -> TIMES .

    error           reduce using rule 19 (arithm_symbol -> TIMES .)
    PLUS            reduce using rule 19 (arithm_symbol -> TIMES .)
    MINUS           reduce using rule 19 (arithm_symbol -> TIMES .)
    DIVIDE          reduce using rule 19 (arithm_symbol -> TIMES .)
    TIMES           reduce using rule 19 (arithm_symbol -> TIMES .)
    MODULUS         reduce using rule 19 (arithm_symbol -> TIMES .)
    COMMA           reduce using rule 19 (arithm_symbol -> TIMES .)
    $end            reduce using rule 19 (arithm_symbol -> TIMES .)
    IDENTIFIER      reduce using rule 19 (arithm_symbol -> TIMES .)
    GREATER_THAN    reduce using rule 19 (arithm_symbol -> TIMES .)
    LESS_THAN       reduce using rule 19 (arithm_symbol -> TIMES .)
    EQUAL           reduce using rule 19 (arithm_symbol -> TIMES .)
    NOT_EQUAL       reduce using rule 19 (arithm_symbol -> TIMES .)
    GREATER_EQUAL   reduce using rule 19 (arithm_symbol -> TIMES .)
    LESS_EQUAL      reduce using rule 19 (arithm_symbol -> TIMES .)
    NUMBA           reduce using rule 19 (arithm_symbol -> TIMES .)
    DECI            reduce using rule 19 (arithm_symbol -> TIMES .)
    OPENBRACE       reduce using rule 19 (arithm_symbol -> TIMES .)
    CLOSEBRACE      reduce using rule 19 (arithm_symbol -> TIMES .)
    DOUBLE_GREATER  reduce using rule 19 (arithm_symbol -> TIMES .)
    EFNOT           reduce using rule 19 (arithm_symbol -> TIMES .)
    OREF            reduce using rule 19 (arithm_symbol -> TIMES .)
    COLON           reduce using rule 19 (arithm_symbol -> TIMES .)


state 24

    (20) arithm_symbol -> MODULUS .

    error           reduce using rule 20 (arithm_symbol -> MODULUS .)
    PLUS            reduce using rule 20 (arithm_symbol -> MODULUS .)
    MINUS           reduce using rule 20 (arithm_symbol -> MODULUS .)
    DIVIDE          reduce using rule 20 (arithm_symbol -> MODULUS .)
    TIMES           reduce using rule 20 (arithm_symbol -> MODULUS .)
    MODULUS         reduce using rule 20 (arithm_symbol -> MODULUS .)
    COMMA           reduce using rule 20 (arithm_symbol -> MODULUS .)
    $end            reduce using rule 20 (arithm_symbol -> MODULUS .)
    IDENTIFIER      reduce using rule 20 (arithm_symbol -> MODULUS .)
    GREATER_THAN    reduce using rule 20 (arithm_symbol -> MODULUS .)
    LESS_THAN       reduce using rule 20 (arithm_symbol -> MODULUS .)
    EQUAL           reduce using rule 20 (arithm_symbol -> MODULUS .)
    NOT_EQUAL       reduce using rule 20 (arithm_symbol -> MODULUS .)
    GREATER_EQUAL   reduce using rule 20 (arithm_symbol -> MODULUS .)
    LESS_EQUAL      reduce using rule 20 (arithm_symbol -> MODULUS .)
    NUMBA           reduce using rule 20 (arithm_symbol -> MODULUS .)
    DECI            reduce using rule 20 (arithm_symbol -> MODULUS .)
    OPENBRACE       reduce using rule 20 (arithm_symbol -> MODULUS .)
    CLOSEBRACE      reduce using rule 20 (arithm_symbol -> MODULUS .)
    DOUBLE_GREATER  reduce using rule 20 (arithm_symbol -> MODULUS .)
    EFNOT           reduce using rule 20 (arithm_symbol -> MODULUS .)
    OREF            reduce using rule 20 (arithm_symbol -> MODULUS .)
    COLON           reduce using rule 20 (arithm_symbol -> MODULUS .)


state 25

    (21) compar_symbol -> GREATER_THAN .

    error           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    PLUS            reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    MINUS           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    DIVIDE          reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    TIMES           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    MODULUS         reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    COMMA           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    $end            reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    CLOSEBRACE      reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    NUMBA           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    DECI            reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    OPENBRACE       reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    DOUBLE_GREATER  reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    EFNOT           reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    OREF            reduce using rule 21 (compar_symbol -> GREATER_THAN .)
    COLON           reduce using rule 21 (compar_symbol -> GREATER_THAN .)


state 26

    (22) compar_symbol -> LESS_THAN .

    error           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    PLUS            reduce using rule 22 (compar_symbol -> LESS_THAN .)
    MINUS           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    DIVIDE          reduce using rule 22 (compar_symbol -> LESS_THAN .)
    TIMES           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    MODULUS         reduce using rule 22 (compar_symbol -> LESS_THAN .)
    COMMA           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    $end            reduce using rule 22 (compar_symbol -> LESS_THAN .)
    CLOSEBRACE      reduce using rule 22 (compar_symbol -> LESS_THAN .)
    IDENTIFIER      reduce using rule 22 (compar_symbol -> LESS_THAN .)
    NUMBA           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    DECI            reduce using rule 22 (compar_symbol -> LESS_THAN .)
    OPENBRACE       reduce using rule 22 (compar_symbol -> LESS_THAN .)
    DOUBLE_GREATER  reduce using rule 22 (compar_symbol -> LESS_THAN .)
    EFNOT           reduce using rule 22 (compar_symbol -> LESS_THAN .)
    OREF            reduce using rule 22 (compar_symbol -> LESS_THAN .)
    COLON           reduce using rule 22 (compar_symbol -> LESS_THAN .)


state 27

    (23) compar_symbol -> EQUAL .

    error           reduce using rule 23 (compar_symbol -> EQUAL .)
    PLUS            reduce using rule 23 (compar_symbol -> EQUAL .)
    MINUS           reduce using rule 23 (compar_symbol -> EQUAL .)
    DIVIDE          reduce using rule 23 (compar_symbol -> EQUAL .)
    TIMES           reduce using rule 23 (compar_symbol -> EQUAL .)
    MODULUS         reduce using rule 23 (compar_symbol -> EQUAL .)
    COMMA           reduce using rule 23 (compar_symbol -> EQUAL .)
    $end            reduce using rule 23 (compar_symbol -> EQUAL .)
    CLOSEBRACE      reduce using rule 23 (compar_symbol -> EQUAL .)
    IDENTIFIER      reduce using rule 23 (compar_symbol -> EQUAL .)
    NUMBA           reduce using rule 23 (compar_symbol -> EQUAL .)
    DECI            reduce using rule 23 (compar_symbol -> EQUAL .)
    OPENBRACE       reduce using rule 23 (compar_symbol -> EQUAL .)
    DOUBLE_GREATER  reduce using rule 23 (compar_symbol -> EQUAL .)
    EFNOT           reduce using rule 23 (compar_symbol -> EQUAL .)
    OREF            reduce using rule 23 (compar_symbol -> EQUAL .)
    COLON           reduce using rule 23 (compar_symbol -> EQUAL .)


state 28

    (24) compar_symbol -> NOT_EQUAL .

    error           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    PLUS            reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    MINUS           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    DIVIDE          reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    TIMES           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    MODULUS         reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    COMMA           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    $end            reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    CLOSEBRACE      reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    IDENTIFIER      reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    NUMBA           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    DECI            reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    OPENBRACE       reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    DOUBLE_GREATER  reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    EFNOT           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    OREF            reduce using rule 24 (compar_symbol -> NOT_EQUAL .)
    COLON           reduce using rule 24 (compar_symbol -> NOT_EQUAL .)


state 29

    (25) compar_symbol -> GREATER_EQUAL .

    error           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    PLUS            reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    MINUS           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    DIVIDE          reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    TIMES           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    MODULUS         reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    COMMA           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    $end            reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    CLOSEBRACE      reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    IDENTIFIER      reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    NUMBA           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    DECI            reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    OPENBRACE       reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    DOUBLE_GREATER  reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    EFNOT           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    OREF            reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)
    COLON           reduce using rule 25 (compar_symbol -> GREATER_EQUAL .)


state 30

    (26) compar_symbol -> LESS_EQUAL .

    error           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    PLUS            reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    MINUS           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    DIVIDE          reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    TIMES           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    MODULUS         reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    COMMA           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    $end            reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    CLOSEBRACE      reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    IDENTIFIER      reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    NUMBA           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    DECI            reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    OPENBRACE       reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    DOUBLE_GREATER  reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    EFNOT           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    OREF            reduce using rule 26 (compar_symbol -> LESS_EQUAL .)
    COLON           reduce using rule 26 (compar_symbol -> LESS_EQUAL .)


state 31

    (38) factor -> NUMBA .

    error           reduce using rule 38 (factor -> NUMBA .)
    GREATER_THAN    reduce using rule 38 (factor -> NUMBA .)
    LESS_THAN       reduce using rule 38 (factor -> NUMBA .)
    EQUAL           reduce using rule 38 (factor -> NUMBA .)
    NOT_EQUAL       reduce using rule 38 (factor -> NUMBA .)
    GREATER_EQUAL   reduce using rule 38 (factor -> NUMBA .)
    LESS_EQUAL      reduce using rule 38 (factor -> NUMBA .)
    PLUS            reduce using rule 38 (factor -> NUMBA .)
    MINUS           reduce using rule 38 (factor -> NUMBA .)
    DIVIDE          reduce using rule 38 (factor -> NUMBA .)
    TIMES           reduce using rule 38 (factor -> NUMBA .)
    MODULUS         reduce using rule 38 (factor -> NUMBA .)
    COMMA           reduce using rule 38 (factor -> NUMBA .)
    $end            reduce using rule 38 (factor -> NUMBA .)
    CLOSEBRACE      reduce using rule 38 (factor -> NUMBA .)
    DOUBLE_GREATER  reduce using rule 38 (factor -> NUMBA .)
    EFNOT           reduce using rule 38 (factor -> NUMBA .)
    OREF            reduce using rule 38 (factor -> NUMBA .)
    COLON           reduce using rule 38 (factor -> NUMBA .)


state 32

    (39) factor -> DECI .

    error           reduce using rule 39 (factor -> DECI .)
    GREATER_THAN    reduce using rule 39 (factor -> DECI .)
    LESS_THAN       reduce using rule 39 (factor -> DECI .)
    EQUAL           reduce using rule 39 (factor -> DECI .)
    NOT_EQUAL       reduce using rule 39 (factor -> DECI .)
    GREATER_EQUAL   reduce using rule 39 (factor -> DECI .)
    LESS_EQUAL      reduce using rule 39 (factor -> DECI .)
    PLUS            reduce using rule 39 (factor -> DECI .)
    MINUS           reduce using rule 39 (factor -> DECI .)
    DIVIDE          reduce using rule 39 (factor -> DECI .)
    TIMES           reduce using rule 39 (factor -> DECI .)
    MODULUS         reduce using rule 39 (factor -> DECI .)
    COMMA           reduce using rule 39 (factor -> DECI .)
    $end            reduce using rule 39 (factor -> DECI .)
    CLOSEBRACE      reduce using rule 39 (factor -> DECI .)
    DOUBLE_GREATER  reduce using rule 39 (factor -> DECI .)
    EFNOT           reduce using rule 39 (factor -> DECI .)
    OREF            reduce using rule 39 (factor -> DECI .)
    COLON           reduce using rule 39 (factor -> DECI .)


state 33

    (8) statement -> statement COMMA . statement
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    statement                      shift and go to state 47
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 34

    (9) arith_stmt -> expression arithm_symbol . expression
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 48
    arithm_symbol                  shift and go to state 18
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    compar_symbol                  shift and go to state 19
    factor                         shift and go to state 17

state 35

    (10) arith_stmt -> expression error . term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 51
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    term                           shift and go to state 49
    factor                         shift and go to state 50

state 36

    (42) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF . OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> DOUBLE_LESS EF . OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER

    OPENBRACE       shift and go to state 52


state 37

    (46) loop -> DOUBLE_LESS WEN . IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> DOUBLE_LESS WEN . IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER

    IDENTIFIER      shift and go to state 53


state 38

    (41) factor -> OPENBRACE expression . CLOSEBRACE
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

    CLOSEBRACE      shift and go to state 54
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

    arithm_symbol                  shift and go to state 34

state 39

    (31) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (32) compar_stmt -> IDENTIFIER . compar_symbol factor
    (33) compar_stmt -> IDENTIFIER . error factor
    (34) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (27) arith_stmt -> IDENTIFIER . arithm_symbol term
    (28) arith_stmt -> IDENTIFIER . error term
    (40) term -> IDENTIFIER .
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    error           shift and go to state 42
    CLOSEBRACE      reduce using rule 40 (term -> IDENTIFIER .)
    COMMA           reduce using rule 40 (term -> IDENTIFIER .)
    $end            reduce using rule 40 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 40 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 40 (term -> IDENTIFIER .)
    OREF            reduce using rule 40 (term -> IDENTIFIER .)
    COLON           reduce using rule 40 (term -> IDENTIFIER .)
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

  ! error           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 40 (term -> IDENTIFIER .) ]

    compar_symbol                  shift and go to state 41
    arithm_symbol                  shift and go to state 43

state 40

    (48) assign -> IDENTIFIER ASSIGNMENT . expression
    (49) assign -> IDENTIFIER ASSIGNMENT . WUD
    (50) assign -> IDENTIFIER ASSIGNMENT . LETTA
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    WUD             shift and go to state 56
    LETTA           shift and go to state 57
    IDENTIFIER      shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 55
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19
    factor                         shift and go to state 17

state 41

    (31) compar_stmt -> IDENTIFIER compar_symbol . IDENTIFIER
    (32) compar_stmt -> IDENTIFIER compar_symbol . factor
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 58
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 59

state 42

    (33) compar_stmt -> IDENTIFIER error . factor
    (34) compar_stmt -> IDENTIFIER error . IDENTIFIER
    (28) arith_stmt -> IDENTIFIER error . term
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE
    (36) term -> . factor
    (40) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 60
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 61
    term                           shift and go to state 62

state 43

    (27) arith_stmt -> IDENTIFIER arithm_symbol . term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 51
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    term                           shift and go to state 63
    factor                         shift and go to state 50

state 44

    (51) print -> SHOW OPENBRACE . IDENTIFIER CLOSEBRACE
    (52) print -> SHOW OPENBRACE . factor CLOSEBRACE
    (53) print -> SHOW OPENBRACE . WUD CLOSEBRACE
    (54) print -> SHOW OPENBRACE . LETTA CLOSEBRACE
    (55) print -> SHOW OPENBRACE . error CLOSEBRACE
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 64
    WUD             shift and go to state 66
    LETTA           shift and go to state 67
    error           shift and go to state 68
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 65

state 45

    (29) compar_stmt -> factor compar_symbol . factor
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 69

state 46

    (30) compar_stmt -> factor error . factor
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 70

state 47

    (8) statement -> statement COMMA statement .
    (8) statement -> statement . COMMA statement

  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 8 (statement -> statement COMMA statement .)
    DOUBLE_GREATER  reduce using rule 8 (statement -> statement COMMA statement .)
    EFNOT           reduce using rule 8 (statement -> statement COMMA statement .)
    OREF            reduce using rule 8 (statement -> statement COMMA statement .)
    COMMA           shift and go to state 33

  ! COMMA           [ reduce using rule 8 (statement -> statement COMMA statement .) ]


state 48

    (9) arith_stmt -> expression arithm_symbol expression .
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MODULUS resolved as shift
    COMMA           reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    $end            reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    CLOSEBRACE      reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    DOUBLE_GREATER  reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    EFNOT           reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    OREF            reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    COLON           reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .)
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

  ! error           [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]
  ! PLUS            [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]
  ! MINUS           [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]
  ! DIVIDE          [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]
  ! TIMES           [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]
  ! MODULUS         [ reduce using rule 9 (arith_stmt -> expression arithm_symbol expression .) ]

    arithm_symbol                  shift and go to state 34

state 49

    (10) arith_stmt -> expression error term .

    error           reduce using rule 10 (arith_stmt -> expression error term .)
    PLUS            reduce using rule 10 (arith_stmt -> expression error term .)
    MINUS           reduce using rule 10 (arith_stmt -> expression error term .)
    DIVIDE          reduce using rule 10 (arith_stmt -> expression error term .)
    TIMES           reduce using rule 10 (arith_stmt -> expression error term .)
    MODULUS         reduce using rule 10 (arith_stmt -> expression error term .)
    COMMA           reduce using rule 10 (arith_stmt -> expression error term .)
    $end            reduce using rule 10 (arith_stmt -> expression error term .)
    CLOSEBRACE      reduce using rule 10 (arith_stmt -> expression error term .)
    DOUBLE_GREATER  reduce using rule 10 (arith_stmt -> expression error term .)
    EFNOT           reduce using rule 10 (arith_stmt -> expression error term .)
    OREF            reduce using rule 10 (arith_stmt -> expression error term .)
    COLON           reduce using rule 10 (arith_stmt -> expression error term .)


state 50

    (36) term -> factor .

    error           reduce using rule 36 (term -> factor .)
    PLUS            reduce using rule 36 (term -> factor .)
    MINUS           reduce using rule 36 (term -> factor .)
    DIVIDE          reduce using rule 36 (term -> factor .)
    TIMES           reduce using rule 36 (term -> factor .)
    MODULUS         reduce using rule 36 (term -> factor .)
    COMMA           reduce using rule 36 (term -> factor .)
    $end            reduce using rule 36 (term -> factor .)
    CLOSEBRACE      reduce using rule 36 (term -> factor .)
    DOUBLE_GREATER  reduce using rule 36 (term -> factor .)
    EFNOT           reduce using rule 36 (term -> factor .)
    OREF            reduce using rule 36 (term -> factor .)
    COLON           reduce using rule 36 (term -> factor .)


state 51

    (40) term -> IDENTIFIER .

    error           reduce using rule 40 (term -> IDENTIFIER .)
    PLUS            reduce using rule 40 (term -> IDENTIFIER .)
    MINUS           reduce using rule 40 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 40 (term -> IDENTIFIER .)
    TIMES           reduce using rule 40 (term -> IDENTIFIER .)
    MODULUS         reduce using rule 40 (term -> IDENTIFIER .)
    COMMA           reduce using rule 40 (term -> IDENTIFIER .)
    $end            reduce using rule 40 (term -> IDENTIFIER .)
    CLOSEBRACE      reduce using rule 40 (term -> IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 40 (term -> IDENTIFIER .)
    EFNOT           reduce using rule 40 (term -> IDENTIFIER .)
    OREF            reduce using rule 40 (term -> IDENTIFIER .)
    COLON           reduce using rule 40 (term -> IDENTIFIER .)


state 52

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF OPENBRACE . compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> DOUBLE_LESS EF OPENBRACE . error CLOSEBRACE DEN statement DOUBLE_GREATER
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    error           shift and go to state 72
    IDENTIFIER      shift and go to state 74
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 71
    factor                         shift and go to state 73

state 53

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER . IN expression COLON statement DOUBLE_GREATER
    (47) loop -> DOUBLE_LESS WEN IDENTIFIER . IN expression COMMA expression COLON statement DOUBLE_GREATER

    IN              shift and go to state 75


state 54

    (41) factor -> OPENBRACE expression CLOSEBRACE .

    error           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    GREATER_THAN    reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    LESS_THAN       reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    EQUAL           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    NOT_EQUAL       reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    GREATER_EQUAL   reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    LESS_EQUAL      reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    PLUS            reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    MINUS           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    DIVIDE          reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    TIMES           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    MODULUS         reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    COMMA           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    $end            reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    CLOSEBRACE      reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    EFNOT           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    OREF            reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)
    COLON           reduce using rule 41 (factor -> OPENBRACE expression CLOSEBRACE .)


state 55

    (48) assign -> IDENTIFIER ASSIGNMENT expression .
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

    COMMA           reduce using rule 48 (assign -> IDENTIFIER ASSIGNMENT expression .)
    $end            reduce using rule 48 (assign -> IDENTIFIER ASSIGNMENT expression .)
    DOUBLE_GREATER  reduce using rule 48 (assign -> IDENTIFIER ASSIGNMENT expression .)
    EFNOT           reduce using rule 48 (assign -> IDENTIFIER ASSIGNMENT expression .)
    OREF            reduce using rule 48 (assign -> IDENTIFIER ASSIGNMENT expression .)
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

    arithm_symbol                  shift and go to state 34

state 56

    (49) assign -> IDENTIFIER ASSIGNMENT WUD .

    COMMA           reduce using rule 49 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    $end            reduce using rule 49 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    DOUBLE_GREATER  reduce using rule 49 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    EFNOT           reduce using rule 49 (assign -> IDENTIFIER ASSIGNMENT WUD .)
    OREF            reduce using rule 49 (assign -> IDENTIFIER ASSIGNMENT WUD .)


state 57

    (50) assign -> IDENTIFIER ASSIGNMENT LETTA .

    COMMA           reduce using rule 50 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    $end            reduce using rule 50 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    DOUBLE_GREATER  reduce using rule 50 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    EFNOT           reduce using rule 50 (assign -> IDENTIFIER ASSIGNMENT LETTA .)
    OREF            reduce using rule 50 (assign -> IDENTIFIER ASSIGNMENT LETTA .)


state 58

    (31) compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .

    error           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    PLUS            reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    MINUS           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    DIVIDE          reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    TIMES           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    MODULUS         reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    COMMA           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    $end            reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    CLOSEBRACE      reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    EFNOT           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    OREF            reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)
    COLON           reduce using rule 31 (compar_stmt -> IDENTIFIER compar_symbol IDENTIFIER .)


state 59

    (32) compar_stmt -> IDENTIFIER compar_symbol factor .

    error           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    PLUS            reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    MINUS           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    DIVIDE          reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    TIMES           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    MODULUS         reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    COMMA           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    $end            reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    CLOSEBRACE      reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    DOUBLE_GREATER  reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    EFNOT           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    OREF            reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)
    COLON           reduce using rule 32 (compar_stmt -> IDENTIFIER compar_symbol factor .)


state 60

    (34) compar_stmt -> IDENTIFIER error IDENTIFIER .
    (40) term -> IDENTIFIER .

  ! reduce/reduce conflict for error resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for MODULUS resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for CLOSEBRACE resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for DOUBLE_GREATER resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for EFNOT resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for OREF resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
  ! reduce/reduce conflict for COLON resolved using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    error           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    PLUS            reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    MINUS           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    DIVIDE          reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    TIMES           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    MODULUS         reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    COMMA           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    $end            reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    CLOSEBRACE      reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    DOUBLE_GREATER  reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    EFNOT           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    OREF            reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)
    COLON           reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)

  ! error           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! DIVIDE          [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! MODULUS         [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! $end            [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! CLOSEBRACE      [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! DOUBLE_GREATER  [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! EFNOT           [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! OREF            [ reduce using rule 40 (term -> IDENTIFIER .) ]
  ! COLON           [ reduce using rule 40 (term -> IDENTIFIER .) ]


state 61

    (33) compar_stmt -> IDENTIFIER error factor .
    (36) term -> factor .

  ! reduce/reduce conflict for error resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for TIMES resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for MODULUS resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for COMMA resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for $end resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for CLOSEBRACE resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for DOUBLE_GREATER resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for EFNOT resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for OREF resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
  ! reduce/reduce conflict for COLON resolved using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    error           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    PLUS            reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    MINUS           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    DIVIDE          reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    TIMES           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    MODULUS         reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    COMMA           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    $end            reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    CLOSEBRACE      reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    DOUBLE_GREATER  reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    EFNOT           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    OREF            reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)
    COLON           reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)

  ! error           [ reduce using rule 36 (term -> factor .) ]
  ! PLUS            [ reduce using rule 36 (term -> factor .) ]
  ! MINUS           [ reduce using rule 36 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 36 (term -> factor .) ]
  ! TIMES           [ reduce using rule 36 (term -> factor .) ]
  ! MODULUS         [ reduce using rule 36 (term -> factor .) ]
  ! COMMA           [ reduce using rule 36 (term -> factor .) ]
  ! $end            [ reduce using rule 36 (term -> factor .) ]
  ! CLOSEBRACE      [ reduce using rule 36 (term -> factor .) ]
  ! DOUBLE_GREATER  [ reduce using rule 36 (term -> factor .) ]
  ! EFNOT           [ reduce using rule 36 (term -> factor .) ]
  ! OREF            [ reduce using rule 36 (term -> factor .) ]
  ! COLON           [ reduce using rule 36 (term -> factor .) ]


state 62

    (28) arith_stmt -> IDENTIFIER error term .

    error           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    PLUS            reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    MINUS           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    DIVIDE          reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    TIMES           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    MODULUS         reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    COMMA           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    $end            reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    CLOSEBRACE      reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    DOUBLE_GREATER  reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    EFNOT           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    OREF            reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)
    COLON           reduce using rule 28 (arith_stmt -> IDENTIFIER error term .)


state 63

    (27) arith_stmt -> IDENTIFIER arithm_symbol term .

    error           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    PLUS            reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    MINUS           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    DIVIDE          reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    TIMES           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    MODULUS         reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    COMMA           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    $end            reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    CLOSEBRACE      reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    DOUBLE_GREATER  reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    EFNOT           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    OREF            reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)
    COLON           reduce using rule 27 (arith_stmt -> IDENTIFIER arithm_symbol term .)


state 64

    (51) print -> SHOW OPENBRACE IDENTIFIER . CLOSEBRACE

    CLOSEBRACE      shift and go to state 76


state 65

    (52) print -> SHOW OPENBRACE factor . CLOSEBRACE

    CLOSEBRACE      shift and go to state 77


state 66

    (53) print -> SHOW OPENBRACE WUD . CLOSEBRACE

    CLOSEBRACE      shift and go to state 78


state 67

    (54) print -> SHOW OPENBRACE LETTA . CLOSEBRACE

    CLOSEBRACE      shift and go to state 79


state 68

    (55) print -> SHOW OPENBRACE error . CLOSEBRACE

    CLOSEBRACE      shift and go to state 80


state 69

    (29) compar_stmt -> factor compar_symbol factor .

    error           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    PLUS            reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    MINUS           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    DIVIDE          reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    TIMES           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    MODULUS         reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    COMMA           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    $end            reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    CLOSEBRACE      reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    DOUBLE_GREATER  reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    EFNOT           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    OREF            reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)
    COLON           reduce using rule 29 (compar_stmt -> factor compar_symbol factor .)


state 70

    (30) compar_stmt -> factor error factor .

    error           reduce using rule 30 (compar_stmt -> factor error factor .)
    PLUS            reduce using rule 30 (compar_stmt -> factor error factor .)
    MINUS           reduce using rule 30 (compar_stmt -> factor error factor .)
    DIVIDE          reduce using rule 30 (compar_stmt -> factor error factor .)
    TIMES           reduce using rule 30 (compar_stmt -> factor error factor .)
    MODULUS         reduce using rule 30 (compar_stmt -> factor error factor .)
    COMMA           reduce using rule 30 (compar_stmt -> factor error factor .)
    $end            reduce using rule 30 (compar_stmt -> factor error factor .)
    CLOSEBRACE      reduce using rule 30 (compar_stmt -> factor error factor .)
    DOUBLE_GREATER  reduce using rule 30 (compar_stmt -> factor error factor .)
    EFNOT           reduce using rule 30 (compar_stmt -> factor error factor .)
    OREF            reduce using rule 30 (compar_stmt -> factor error factor .)
    COLON           reduce using rule 30 (compar_stmt -> factor error factor .)


state 71

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt . CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 81


state 72

    (45) if_statement -> DOUBLE_LESS EF OPENBRACE error . CLOSEBRACE DEN statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 82


state 73

    (29) compar_stmt -> factor . compar_symbol factor
    (30) compar_stmt -> factor . error factor
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL

    error           shift and go to state 46
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30

    compar_symbol                  shift and go to state 45

state 74

    (31) compar_stmt -> IDENTIFIER . compar_symbol IDENTIFIER
    (32) compar_stmt -> IDENTIFIER . compar_symbol factor
    (33) compar_stmt -> IDENTIFIER . error factor
    (34) compar_stmt -> IDENTIFIER . error IDENTIFIER
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL

    error           shift and go to state 83
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30

    compar_symbol                  shift and go to state 41

state 75

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER IN . expression COLON statement DOUBLE_GREATER
    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN . expression COMMA expression COLON statement DOUBLE_GREATER
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 84
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19
    factor                         shift and go to state 17

state 76

    (51) print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .

    COMMA           reduce using rule 51 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    $end            reduce using rule 51 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 51 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    EFNOT           reduce using rule 51 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)
    OREF            reduce using rule 51 (print -> SHOW OPENBRACE IDENTIFIER CLOSEBRACE .)


state 77

    (52) print -> SHOW OPENBRACE factor CLOSEBRACE .

    COMMA           reduce using rule 52 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    $end            reduce using rule 52 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 52 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    EFNOT           reduce using rule 52 (print -> SHOW OPENBRACE factor CLOSEBRACE .)
    OREF            reduce using rule 52 (print -> SHOW OPENBRACE factor CLOSEBRACE .)


state 78

    (53) print -> SHOW OPENBRACE WUD CLOSEBRACE .

    COMMA           reduce using rule 53 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    $end            reduce using rule 53 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 53 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    EFNOT           reduce using rule 53 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)
    OREF            reduce using rule 53 (print -> SHOW OPENBRACE WUD CLOSEBRACE .)


state 79

    (54) print -> SHOW OPENBRACE LETTA CLOSEBRACE .

    COMMA           reduce using rule 54 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    $end            reduce using rule 54 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 54 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    EFNOT           reduce using rule 54 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)
    OREF            reduce using rule 54 (print -> SHOW OPENBRACE LETTA CLOSEBRACE .)


state 80

    (55) print -> SHOW OPENBRACE error CLOSEBRACE .

    COMMA           reduce using rule 55 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    $end            reduce using rule 55 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    DOUBLE_GREATER  reduce using rule 55 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    EFNOT           reduce using rule 55 (print -> SHOW OPENBRACE error CLOSEBRACE .)
    OREF            reduce using rule 55 (print -> SHOW OPENBRACE error CLOSEBRACE .)


state 81

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE . DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    DEN             shift and go to state 85


state 82

    (45) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE . DEN statement DOUBLE_GREATER

    DEN             shift and go to state 86


state 83

    (33) compar_stmt -> IDENTIFIER error . factor
    (34) compar_stmt -> IDENTIFIER error . IDENTIFIER
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 87
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    factor                         shift and go to state 88

state 84

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression . COLON statement DOUBLE_GREATER
    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression . COMMA expression COLON statement DOUBLE_GREATER
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

    COLON           shift and go to state 89
    COMMA           shift and go to state 90
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

    arithm_symbol                  shift and go to state 34

state 85

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN . statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 10
    statement                      shift and go to state 91
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 86

    (45) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    statement                      shift and go to state 92
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 87

    (34) compar_stmt -> IDENTIFIER error IDENTIFIER .

    CLOSEBRACE      reduce using rule 34 (compar_stmt -> IDENTIFIER error IDENTIFIER .)


state 88

    (33) compar_stmt -> IDENTIFIER error factor .

    CLOSEBRACE      reduce using rule 33 (compar_stmt -> IDENTIFIER error factor .)


state 89

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 3
    statement                      shift and go to state 93
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 90

    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA . expression COLON statement DOUBLE_GREATER
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 94
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19
    factor                         shift and go to state 17

state 91

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . DOUBLE_GREATER
    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . EFNOT statement DOUBLE_GREATER
    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement . OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 95
    EFNOT           shift and go to state 96
    OREF            shift and go to state 97
    COMMA           shift and go to state 33


state 92

    (45) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement . DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 98
    COMMA           shift and go to state 33


state 93

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement . DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 99
    COMMA           shift and go to state 33


state 94

    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression . COLON statement DOUBLE_GREATER
    (9) arith_stmt -> expression . arithm_symbol expression
    (10) arith_stmt -> expression . error term
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS

    COLON           shift and go to state 100
    error           shift and go to state 35
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24

    arithm_symbol                  shift and go to state 34

state 95

    (42) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .

    COMMA           reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    $end            reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)
    OREF            reduce using rule 42 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER .)


state 96

    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 10
    statement                      shift and go to state 101
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 97

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF . OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    OPENBRACE       shift and go to state 102


state 98

    (45) if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .

    COMMA           reduce using rule 45 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    $end            reduce using rule 45 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 45 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 45 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)
    OREF            reduce using rule 45 (if_statement -> DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER .)


state 99

    (46) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .

    COMMA           reduce using rule 46 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .)
    $end            reduce using rule 46 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 46 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 46 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .)
    OREF            reduce using rule 46 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER .)


state 100

    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    expression                     shift and go to state 3
    statement                      shift and go to state 103
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    compar_stmt                    shift and go to state 10
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 101

    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement . DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 104
    COMMA           shift and go to state 33


state 102

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE . compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    IDENTIFIER      shift and go to state 74
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 105
    factor                         shift and go to state 73

state 103

    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement . DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 106
    COMMA           shift and go to state 33


state 104

    (43) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .

    COMMA           reduce using rule 43 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    $end            reduce using rule 43 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 43 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 43 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    OREF            reduce using rule 43 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)


state 105

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt . CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER

    CLOSEBRACE      shift and go to state 107


state 106

    (47) loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .

    COMMA           reduce using rule 47 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .)
    $end            reduce using rule 47 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 47 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 47 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .)
    OREF            reduce using rule 47 (loop -> DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER .)


state 107

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE . DEN statement EFNOT statement DOUBLE_GREATER

    DEN             shift and go to state 108


state 108

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN . statement EFNOT statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 10
    statement                      shift and go to state 109
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 109

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement . EFNOT statement DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    EFNOT           shift and go to state 110
    COMMA           shift and go to state 33


state 110

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT . statement DOUBLE_GREATER
    (2) statement -> . expression
    (3) statement -> . if_statement
    (4) statement -> . loop
    (5) statement -> . assign
    (6) statement -> . print
    (7) statement -> . COMMENT
    (8) statement -> . statement COMMA statement
    (11) expression -> . symbol
    (12) expression -> . compar_stmt
    (13) expression -> . arith_stmt
    (35) expression -> . term
    (42) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement DOUBLE_GREATER
    (43) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (44) if_statement -> . DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER
    (45) if_statement -> . DOUBLE_LESS EF OPENBRACE error CLOSEBRACE DEN statement DOUBLE_GREATER
    (46) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COLON statement DOUBLE_GREATER
    (47) loop -> . DOUBLE_LESS WEN IDENTIFIER IN expression COMMA expression COLON statement DOUBLE_GREATER
    (48) assign -> . IDENTIFIER ASSIGNMENT expression
    (49) assign -> . IDENTIFIER ASSIGNMENT WUD
    (50) assign -> . IDENTIFIER ASSIGNMENT LETTA
    (51) print -> . SHOW OPENBRACE IDENTIFIER CLOSEBRACE
    (52) print -> . SHOW OPENBRACE factor CLOSEBRACE
    (53) print -> . SHOW OPENBRACE WUD CLOSEBRACE
    (54) print -> . SHOW OPENBRACE LETTA CLOSEBRACE
    (55) print -> . SHOW OPENBRACE error CLOSEBRACE
    (14) symbol -> . arithm_symbol
    (15) symbol -> . compar_symbol
    (29) compar_stmt -> . factor compar_symbol factor
    (30) compar_stmt -> . factor error factor
    (31) compar_stmt -> . IDENTIFIER compar_symbol IDENTIFIER
    (32) compar_stmt -> . IDENTIFIER compar_symbol factor
    (33) compar_stmt -> . IDENTIFIER error factor
    (34) compar_stmt -> . IDENTIFIER error IDENTIFIER
    (9) arith_stmt -> . expression arithm_symbol expression
    (10) arith_stmt -> . expression error term
    (27) arith_stmt -> . IDENTIFIER arithm_symbol term
    (28) arith_stmt -> . IDENTIFIER error term
    (36) term -> . factor
    (40) term -> . IDENTIFIER
    (16) arithm_symbol -> . PLUS
    (17) arithm_symbol -> . MINUS
    (18) arithm_symbol -> . DIVIDE
    (19) arithm_symbol -> . TIMES
    (20) arithm_symbol -> . MODULUS
    (21) compar_symbol -> . GREATER_THAN
    (22) compar_symbol -> . LESS_THAN
    (23) compar_symbol -> . EQUAL
    (24) compar_symbol -> . NOT_EQUAL
    (25) compar_symbol -> . GREATER_EQUAL
    (26) compar_symbol -> . LESS_EQUAL
    (38) factor -> . NUMBA
    (39) factor -> . DECI
    (41) factor -> . OPENBRACE expression CLOSEBRACE

    COMMENT         shift and go to state 8
    DOUBLE_LESS     shift and go to state 13
    IDENTIFIER      shift and go to state 15
    SHOW            shift and go to state 16
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    DIVIDE          shift and go to state 22
    TIMES           shift and go to state 23
    MODULUS         shift and go to state 24
    GREATER_THAN    shift and go to state 25
    LESS_THAN       shift and go to state 26
    EQUAL           shift and go to state 27
    NOT_EQUAL       shift and go to state 28
    GREATER_EQUAL   shift and go to state 29
    LESS_EQUAL      shift and go to state 30
    NUMBA           shift and go to state 31
    DECI            shift and go to state 32
    OPENBRACE       shift and go to state 14

    compar_stmt                    shift and go to state 10
    statement                      shift and go to state 111
    expression                     shift and go to state 3
    if_statement                   shift and go to state 4
    loop                           shift and go to state 5
    assign                         shift and go to state 6
    print                          shift and go to state 7
    symbol                         shift and go to state 9
    arith_stmt                     shift and go to state 11
    term                           shift and go to state 12
    factor                         shift and go to state 17
    arithm_symbol                  shift and go to state 18
    compar_symbol                  shift and go to state 19

state 111

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement . DOUBLE_GREATER
    (8) statement -> statement . COMMA statement

    DOUBLE_GREATER  shift and go to state 112
    COMMA           shift and go to state 33


state 112

    (44) if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .

    COMMA           reduce using rule 44 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    $end            reduce using rule 44 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    DOUBLE_GREATER  reduce using rule 44 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    EFNOT           reduce using rule 44 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)
    OREF            reduce using rule 44 (if_statement -> DOUBLE_LESS EF OPENBRACE compar_stmt CLOSEBRACE DEN statement OREF OPENBRACE compar_stmt CLOSEBRACE DEN statement EFNOT statement DOUBLE_GREATER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 15 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 15 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 15 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 15 resolved as shift
WARNING: shift/reduce conflict for error in state 17 resolved as shift
WARNING: shift/reduce conflict for error in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 39 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 47 resolved as shift
WARNING: shift/reduce conflict for error in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 48 resolved as shift
WARNING: shift/reduce conflict for MODULUS in state 48 resolved as shift
WARNING: reduce/reduce conflict in state 60 resolved using rule (compar_stmt -> IDENTIFIER error IDENTIFIER)
WARNING: rejected rule (term -> IDENTIFIER) in state 60
WARNING: reduce/reduce conflict in state 61 resolved using rule (compar_stmt -> IDENTIFIER error factor)
WARNING: rejected rule (term -> factor) in state 61
